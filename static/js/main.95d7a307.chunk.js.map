{"version":3,"sources":["CustomSearch.js","CustomToolbar.js","ConfirmModal.js","UserModal.js","users.js","UsersGrid.js","serviceWorker.js","index.js"],"names":["CustomSearch","props","onSearchChange","searchText","setState","state","searchInput","React","createRef","console","log","this","searchAutoFocus","searchFieldAlignment","showTitle","classes","localization","searchFieldVariant","searchFieldStyle","icons","searchUsers","className","TextField","autoFocus","ref","searchField","value","onChange","event","target","placeholder","searchPlaceholder","variant","InputProps","startAdornment","InputAdornment","position","Tooltip","title","searchTooltip","Search","fontSize","endAdornment","IconButton","disabled","onClick","aria-label","clearSearchAriaLabel","ResetSearch","style","inputProps","searchAriaLabel","color","Component","CustomToolbar","clickTab","clickedTab","currentTarget","dataset","tabName","activeTab","setActiveTab","materialTableRef","current","onAllSelected","columnsButtonAnchorEl","exportButtonAnchorEl","columnsButton","showColumnsTitle","showColumnsAriaLabel","ViewColumn","Menu","anchorEl","open","Boolean","onClose","MenuItem","key","opacity","fontWeight","addRemoveColumns","columns","map","col","hidden","hiddenByColumnsButton","tableData","id","component","htmlFor","removable","Checkbox","checked","onColumnsChanged","exportButton","exportTitle","exportAriaLabel","Export","exportCsv","exportCSVName","exportPdf","exportPDFName","components","Actions","actions","filter","a","Fragment","data","selectedRows","length","renderSelectedActions","renderDefaultActions","showTextRowsSelected","search","showModalHandler","titleText","nRowsSelected","replace","backgroundColor","Typography","Icon","renderActions","data-tab-name","textModal","block_user","action","btnText","unblock_user","password_recovery","delete_account","ConfirmModal","show","type","text","cancelHandler","confirmHandler","question","Modal","onHide","centered","backdrop","keyboard","Header","closeButton","Title","Body","Footer","UsersModal","deleteAccount","deletedAccounts","editAccount","hideInputAccount","prevState","accounts","account","includes","showDeleteAccountConfirmModal","address","deleteAccountConfirmModal","closeDeleteAccountConfirmModal","errors","accountInputShow","refs","focus","showInputAccount","validateControl","saveAccount","editedAccount","find","item","push","privileged","touched","name","newValue","trimLeft","substring","toUpperCase","toLowerCase","setStateWithConfirmed","prevValue","prevConfirmed","confirmed","onChangeEmail","onChangePhone","onChangePrivileged","regName","test","surname","firstname","patronymic","datePast","Date","birthDate","setFullYear","getFullYear","birthday","userName","email","phone","isFormValid","Object","keys","every","validateForm","refsArr","forEach","field","tagName","isFormSubmit","renderAccount","index","ListGroup","Item","Switch","size","tabIndex","EditOutlined","renderAccounts","horizontal","oid","active","lastAuth","onkeypress","keyPress","nextProps","setStateFromProps","prevProps","snapshot","keyPressBind","keyCode","preventDefault","sortRefsArr","sort","b","nextIndex","findIndex","element","next","closeModalHandler","saveUserHandler","Form","autoComplete","Group","as","Row","Label","column","sm","Col","Control","InputGroup","FormControl","Append","Text","CheckCircleOutlined","CancelOutlined","Prepend","display","flexDirection","inputMode","alignItems","formValid","users","userType","device","date","declension","n","nominative","genitive_singular","genitive_plural","userGenitive","theme","createMuiTheme","palette","primary","main","secondary","UsersGrid","filterUsers","user","showMessage","message","hideMessage","loginUser","rowData","showBlockUserConfirmModal","blockUserConfirmModal","closeBlockUserConfirmModal","blockUser","blockUsers","count","userText","messageText","showUnblockUserConfirmModal","unblockUserConfirmModal","closeUnblockUserConfirmModal","showPasswordRecoveryConfirmModal","passwordRecoveryConfirmModal","closePasswordRecoveryConfirmModal","passwordRecoveryUser","passwordRecoveryUsers","showUserModal","userModal","closeUserModal","saveUser","stateModal","now","trim","userIndex","render","slice","PhoneIphone","Computer","format","fromNow","tableRef","options","actionsColumnIndex","toolbarButtonAlignment","selection","rowStyle","addRowPosition","draggable","paging","propsCopy","icon","LockOpen","tooltip","LockOutlined","VpnKeyOutlined","disabledFunc","Toolbar","error","header","toolbar","body","emptyDataSourceMessage","addTooltip","editTooltip","deleteTooltip","editRow","deleteText","cancelTooltip","saveTooltip","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","nextTooltip","previousTooltip","lastTooltip","VisibilityOutlined","VpnKey","some","onSelectionChange","rows","Add","editable","Toast","delay","autohide","zIndex","bottom","right","durationFromNow","interval","moment","add","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":";upBAUqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAED,gBAZhB,EAAKE,MAAQ,CACXF,WAAY,IAEd,EAAKG,YAAcC,IAAMC,YALR,E,gEAUjBC,QAAQC,IAAI,uB,+BAOJ,IAAD,OACCP,EAAeQ,KAAKN,MAApBF,WADD,EAYHQ,KAAKV,MATPW,EAHK,EAGLA,gBACAC,EAJK,EAILA,qBACAC,EALK,EAKLA,UACAC,EANK,EAMLA,QACAC,EAPK,EAOLA,aACAC,EARK,EAQLA,mBACAC,EATK,EASLA,iBACAC,EAVK,EAULA,MACAC,EAXK,EAWLA,YAEF,OACE,yBAAKC,UAAU,iBACb,kBAACC,EAAA,EAAD,CACEC,UAAWX,EACXY,IAAKb,KAAKL,YACVe,UAAS,+BACkB,SAAzBR,IAAiD,IAAdC,EAC/B,GACAC,EAAQU,aAEdC,MAAOvB,EACPwB,SAAU,SAACC,GACT,IAAMzB,EAAayB,EAAMC,OAAOH,MAChC,EAAKxB,eAAeC,IAEtB2B,YAAad,EAAae,kBAC1BC,QAASf,EACTgB,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACC,EAAA,EAAD,CAASC,MAAOtB,EAAauB,eAC3B,kBAACpB,EAAMqB,OAAP,CAAcC,SAAS,YAI7BC,aACE,kBAACP,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACO,EAAA,EAAD,CACEC,UAAWzC,EACX0C,QAAS,kBAAM,EAAK3C,eAAe,KACnC4C,aAAY9B,EAAa+B,sBAEzB,kBAAC5B,EAAM6B,YAAP,CAAmBP,SAAS,QAAQK,aAAW,YAIrDG,MAAO/B,EACPgC,WAAY,CACV,aAAclC,EAAamC,oBAIjC,kBAAC,IAAD,CACEC,MAAM,UACNpB,QAAQ,YACRX,UAAU,qBACVwB,QAAS,kBAAMzB,EAAYjB,KAJ7B,uC,GAzEkCI,IAAM8C,W,oCCQ3BC,E,kDACnB,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IA6IRsD,SAAW,SAAC3B,GACV,IAAM4B,EAAa5B,EAAM6B,cAAcC,QAAQC,QAD3B,EAEkC,EAAK1D,MAAnD2D,EAFY,EAEZA,UAAWC,EAFC,EAEDA,aAAcC,EAFb,EAEaA,iBAC7BF,IAAcJ,IAChBM,EAAiBC,QAAQC,eAAc,GACvCH,EAAaL,KAjJf,EAAKnD,MAAQ,CACX4D,sBAAuB,KACvBC,qBAAsB,KACtB/D,WAAYF,EAAME,YALH,E,mEASK,IAAD,OACfa,EAAY,eACbL,KAAKV,MAAMe,cAGhB,OACE,oCACGL,KAAKV,MAAMkE,eACV,0BAAM9C,UAAU,0BACd,kBAACgB,EAAA,EAAD,CAASC,MAAOtB,EAAaoD,kBAC3B,kBAACzB,EAAA,EAAD,CACEtB,UAAU,6BACV+B,MAAM,UACNP,QAAS,SAACjB,GAAD,OACP,EAAKxB,SAAS,CACZ6D,sBAAuBrC,EAAM6B,iBAGjCX,aAAY9B,EAAaqD,sBAEzB,uBAAMpE,MAAMkB,MAAMmD,WAAlB,QAGJ,kBAACC,EAAA,EAAD,CACEC,SAAU7D,KAAKN,MAAM4D,sBACrBQ,KAAMC,QAAQ/D,KAAKN,MAAM4D,uBACzBU,QAAS,kBAAM,EAAKvE,SAAS,CAAE6D,sBAAuB,SAEtD,kBAACW,EAAA,EAAD,CACEC,IAAK,OACLjC,UAAQ,EACRK,MAAO,CACL6B,QAAS,EACTC,WAAY,IACZtC,SAAU,KAGXzB,EAAagE,kBAEfrE,KAAKV,MAAMgF,QAAQC,KAAI,SAACC,GACvB,OAAKA,EAAIC,QAAUD,EAAIE,sBAEnB,wBAAIR,IAAKM,EAAIG,UAAUC,IACrB,kBAACX,EAAA,EAAD,CAEEY,UAAU,QACVC,QAAO,wBAAmBN,EAAIG,UAAUC,IACxC3C,UAA4B,IAAlBuC,EAAIO,WAEd,kBAACC,EAAA,EAAD,CACEC,SAAUT,EAAIC,OACdG,GAAE,wBAAmBJ,EAAIG,UAAUC,IACnC5D,SAAU,kBACR,EAAK1B,MAAM4F,iBAAiBV,GAAMA,EAAIC,WAG1C,8BAAOD,EAAI7C,SAKZ,UAKd3B,KAAKV,MAAM6F,cACV,0BAAMzE,UAAU,0BACd,kBAACgB,EAAA,EAAD,CAASC,MAAOtB,EAAa+E,aAC3B,kBAACpD,EAAA,EAAD,CACEtB,UAAU,6BACV+B,MAAM,UACNP,QAAS,SAACjB,GAAD,OACP,EAAKxB,SAAS,CACZ8D,qBAAsBtC,EAAM6B,iBAGhCX,aAAY9B,EAAagF,iBAEzB,uBAAM/F,MAAMkB,MAAM8E,OAAlB,QAGJ,kBAAC1B,EAAA,EAAD,CACEC,SAAU7D,KAAKN,MAAM6D,qBACrBO,KAAMC,QAAQ/D,KAAKN,MAAM6D,sBACzBS,QAAS,kBAAM,EAAKvE,SAAS,CAAE8D,qBAAsB,SAErD,kBAACU,EAAA,EAAD,CAAUC,IAAI,aAAahC,QAASlC,KAAKuF,WACtClF,EAAamF,eAEhB,kBAACvB,EAAA,EAAD,CAAUC,IAAI,aAAahC,QAASlC,KAAKyF,WACtCpF,EAAaqF,iBAKtB,0BAAMhF,UAAU,0BACd,uBAAMpB,MAAMqG,WAAWC,QAAvB,CACEC,QACE7F,KAAKV,MAAMuG,SACX7F,KAAKV,MAAMuG,QAAQC,QAAO,SAACC,GAAD,MAAsB,YAAfA,EAAEtE,YAErCkE,WAAY3F,KAAKV,MAAMqG,iB,8CAQ/B,OACE,kBAAC,IAAMK,SAAP,KACE,uBAAM1G,MAAMqG,WAAWC,QAAvB,CACEC,QAAS7F,KAAKV,MAAMuG,QAAQC,QAC1B,SAACC,GAAD,MAAsB,oBAAfA,EAAEtE,YAEXwE,KAAMjG,KAAKV,MAAM4G,aACjBP,WAAY3F,KAAKV,MAAMqG,gB,sCAO7B,OACE,yBAAKjF,UAAU,2BACZV,KAAKV,MAAM4G,cAAgBlG,KAAKV,MAAM4G,aAAaC,OAAS,EACzDnG,KAAKoG,wBACLpG,KAAKqG,0B,+BAcL,IAAD,SAaHrG,KAAKV,MAXPgH,EAFK,EAELA,qBACAJ,EAHK,EAGLA,aACAK,EAJK,EAILA,OACAlG,EALK,EAKLA,aACAF,EANK,EAMLA,UACAwB,EAPK,EAOLA,MACAwB,EARK,EAQLA,iBACAqD,EATK,EASLA,iBACA/F,EAVK,EAULA,YAEAwC,GAZK,EAWLC,aAXK,EAYLD,WAGIwD,EACJP,GAAgBA,EAAaC,OAAS,EACI,oBAA/B9F,EAAaqG,cAClBrG,EAAaqG,cAAcR,EAAaC,QACxC9F,EAAaqG,cAAcC,QAAQ,MAAOT,EAAaC,QACzDhG,EACAwB,EACA,KAEN,OACE,yBACEjB,UAAU,iBACV4B,MAAO,CACLsE,gBAAiBV,EAAaC,OAAS,GAAK,uBAG7CG,GAAwBG,GACvB,yBAAK/F,UAAU,wBACb,kBAACmG,EAAA,EAAD,CAAYnG,UAAU,6BAA6BW,QAAQ,MACxDoF,GAGH,kBAACzE,EAAA,EAAD,CACEtB,UAAU,4BACVwB,QAAS,SAACjB,GACRkC,EAAiBC,QAAQC,eAAc,KAGzC,kBAAC3B,EAAA,EAAD,CAASC,MAAM,mFACb,kBAACmF,EAAA,EAAD,CAAMrE,MAAM,WAAZ,YAKPzC,KAAK+G,gBACLR,GAAU,kBAAC,EAAD,iBAAkBvG,KAAKV,MAAvB,CAA8BmB,YAAaA,KACtD,kBAAC,IAAD,CACEgC,MAAM,UACNpB,QAAQ,YACRX,UAAU,0BACVwB,QAAS,WACPiB,EAAiBC,QAAQC,eAAc,GACvCmD,EAAiB,SANrB,oDAkBA,yBAAK9F,UAAU,aACb,kBAAC,IAAD,CACE+B,MAAM,UACNpB,QAAQ,YACRX,UAAS,yBAAkC,QAAduC,EAAsB,SAAW,IAC9D+D,gBAAc,MACd9E,QAAS,SAACjB,GAAD,OAAW,EAAK2B,SAAS3B,KALpC,sBASA,kBAAC,IAAD,CACEwB,MAAM,UACNpB,QAAQ,YACRX,UAAS,yBACO,WAAduC,EAAyB,SAAW,IAEtC+D,gBAAc,SACd9E,QAASlC,KAAK4C,UAPhB,oDAWA,kBAAC,IAAD,CACEH,MAAM,UACNpB,QAAQ,YACRX,UAAS,yBACO,YAAduC,EAA0B,SAAW,IAEvC+D,gBAAc,UACd9E,QAASlC,KAAK4C,UAPhB,oG,GAlPiChD,IAAM8C,W,iFCd3CuE,EAAY,CAChBC,WAAY,CACVvF,MAAO,wIACPwF,OAAQ,iFACRC,QAAS,kFAEXC,aAAc,CACZ1F,MAAO,0JACPwF,OAAQ,uFACRC,QAAS,wFAEXE,kBAAmB,CACjB3F,MAAO,4HACPwF,OAAQ,mIACRC,QAAS,4EAEXG,eAAgB,CACd5F,MAAO,mIACPwF,OAAQ,iHACRC,QAAS,+CAKQI,G,kDACnB,WAAYlI,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,GAFI,E,qDAKT,IAAD,EAQHM,KAAKV,MARF,IAELmI,YAFK,aAGLC,YAHK,MAGE,GAHF,EAILzB,EAJK,EAILA,KACA0B,EALK,EAKLA,KACAC,EANK,EAMLA,cACAC,EAPK,EAOLA,eAPK,EAS2CZ,EAAUS,IAAS,GAT9D,IASC/F,aATD,MASS,GATT,MASawF,cATb,MASsB,GATtB,MAS0BC,eAT1B,MASoC,GATpC,EAWDU,EAAQ,2HAA6BX,EAA7B,YAAuCQ,EAAvC,KACd,OACE,oCACE,kBAACI,EAAA,EAAD,CACErH,UAAU,gBACV+G,KAAMA,EACNO,OAAQJ,EACRK,UAAQ,EACRC,SAAS,SACTC,UAAU,GAEV,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,KAAc3G,IAEhB,kBAACoG,EAAA,EAAMQ,KAAP,KAAaT,GACb,kBAACC,EAAA,EAAMS,OAAP,KACE,kBAAC,IAAD,CAAQtG,QAAS0F,GAAjB,oDACA,kBAAC,IAAD,CACEnF,MAAM,UACNpB,QAAQ,YACRX,UAAU,qBACVwB,QAAS,WACP0F,IACAC,EAAe5B,KAGhBmB,U,GA3C2BxH,IAAM8C,WCP3B+F,I,yDACnB,WAAYnJ,GAAQ,IAAD,8BACjB,cAAMA,IA+IRoJ,cAAgB,SAACC,GAAqB,IAAD,KACnC,UAAI,EAAKjJ,aAAT,iBAAI,EAAYkJ,mBAAhB,aAAI,EAAyB7H,QAC3B,EAAK8H,mBAGP,EAAKpJ,UAAS,SAACqJ,GACb,IAAIC,EAAQ,YAAOD,EAAUC,UAI7B,MAAO,CAAEA,SAHTA,EAAWA,EAASjD,QAClB,SAACkD,GAAD,OAAcL,EAAgBM,SAASD,WAxJ1B,EA8JnBE,8BAAgC,SAACF,GAC/B,IAAM/C,EAAO,CAAC+C,GAD6B,EAENA,EAA7BjI,aAFmC,MAE3B,GAF2B,IAENiI,EAAjBG,eAFuB,MAEb,GAFa,EAGrCC,EAA4B,CAChC3B,MAAM,EACNxB,OACA0B,KAAK,GAAD,OAAK5G,GAAL,OAAaoI,GAAO,YAASA,EAAT,OAE1B,EAAK1J,SAAS,CAAE2J,+BAtKC,EAyKnBC,+BAAiC,WAM/B,EAAK5J,SAAS,CAAE2J,0BALkB,CAChC3B,MAAM,EACNxB,KAAM,GACN0B,KAAM,OA7KS,EAkLnBkB,iBAAmB,WAAO,IAChBS,EADe,eACC,EAAK5J,OAArB4J,OACRA,EAAON,QAAU,GACjB,EAAKvJ,SACH,CACE8J,kBAAkB,EAClBP,QAAS,GACTJ,YAAa,GACbU,WAEF,kBAAM,EAAKE,KAAK,oBAAoBC,YA5LrB,EAgMnBC,iBAAmB,WAAmB,IAAlBV,EAAiB,uDAAP,GAAO,EACZA,EAAfjI,aAD2B,MACnB,GADmB,EAEnC,EAAKtB,SACH,CACE8J,kBAAkB,EAClBP,QAASjI,EACT6H,YAAaI,IAEf,kBAAM,EAAKQ,KAAKR,QAAQS,WAE1B,EAAKE,gBAAgB,UAAW5I,IA1Mf,EA6MnB6I,YAAc,WAAO,IAAD,EACe,EAAKlK,MAA9BsJ,EADU,EACVA,QAASJ,EADC,EACDA,YACjB,GAAII,EAAS,CACX,IAAMG,EAAO,2FAAsBH,GAC7BD,EAAQ,YAAO,EAAKrJ,MAAMqJ,UAChC,GAAIH,EAAY7H,MAAO,CACrB,IAAM8I,EAAgBd,EAASe,MAAK,SAACC,GAAD,OAAUA,IAASnB,KACvDiB,EAAc9I,MAAQiI,EACtBa,EAAcV,QAAUA,MACnB,CAELJ,EAASiB,KAAK,CAAEjJ,MAAOiI,EAASG,UAASc,YADtB,IAGrB,EAAKxK,SAAS,CAAEsJ,aAChB,EAAKF,uBACA,CAAC,IAAD,iBAC4B,EAAKnJ,OAA9B4J,EADH,EACGA,OAAQY,EADX,EACWA,QAChBZ,EAAON,QAAU,iHACjBkB,EAAQlB,SAAU,EAClB,EAAKvJ,SAAS,CAAE6J,SAAQY,cAhOT,EAoOnBlJ,SAAW,SAACC,GAAW,IACbkJ,EAASlJ,EAAMC,OAAfiJ,KACKC,EAAanJ,EAAMC,OAA1BH,MAEFqJ,IACW,YAATD,GAA+B,cAATA,GAAiC,eAATA,IAEhDC,GADAA,EAAWA,EAASzD,QAAQ,MAAO,KAAK0D,YAE7BC,UAAU,EAAG,GAAGC,cAAgBH,EAASE,UAAU,IAEnD,aAATH,IACFC,EAAWA,EAASI,eAET,UAATL,IAGFC,GADAA,GADAA,EAAWA,EAASzD,QAAQ,WAAY,KACpBA,QAAQ,sBAAuB,KAC/BA,QAAQ,KAAM,KAGvB,UAATwD,IACFC,EAAWA,EAASzD,QAAQ,KAAM,MAItC,IAKO,EALDuD,EAAO,eAAQ,EAAKxK,MAAMwK,UAChCA,EAAQC,IAAQ,EAEH,UAATA,GAA6B,UAATA,GACtB,EAAKM,sBAAsBN,EAAMC,GAEjC,EAAK3K,UAAL,mBAAiB0K,EAAOC,GAAxB,wBAAkCF,GAAlC,IAEF,EAAKP,gBAAgBQ,EAAMC,IApQV,EAuQnBK,sBAAwB,SAACN,EAAMC,GAAc,IAAD,IACpCM,EAAS,UAAG,EAAKpL,MAAM2G,KAAKkE,UAAnB,aAAG,EAAuBpJ,MACnC4J,EAAa,UAAG,EAAKrL,MAAM2G,KAAKkE,UAAnB,aAAG,EAAuBS,UACvCV,EAAO,eAAQ,EAAKxK,MAAMwK,SAChCA,EAAQC,IAAQ,EAChB,EAAK1K,UAAS,SAACqJ,GAAe,IAAD,IACCA,EAAUqB,GAAhCS,iBADqB,SAO3B,OAJEA,IADEF,IAAcN,IAAYO,GAKvB,EAAP,iBAAUR,EAAO,CAAEpJ,MAAOqJ,EAAUQ,cAApC,wBAAiDV,GAAjD,MAnRe,EAuRnBW,cAAgB,SAAC5J,GACfnB,QAAQC,IAAI,iBADa,MAEDkB,EAAMC,OAAtBiJ,EAFiB,EAEjBA,KAAMpJ,EAFW,EAEXA,MACRqJ,EAAWrJ,EAAM4F,QAAQ,KAAM,IACrC,EAAK8D,sBAAsBN,EAAMC,GACjC,EAAKT,gBAAgBQ,EAAMpJ,IA5RV,EA+RnB+J,cAAgB,SAAC7J,GACfnB,QAAQC,IAAI,iBADa,MAEDkB,EAAMC,OAAtBiJ,EAFiB,EAEjBA,KACJC,EAHqB,EAEXrJ,MACO4F,QAAQ,WAAY,IAEzCyD,GADAA,EAAWA,EAASzD,QAAQ,sBAAuB,KAC/BA,QAAQ,KAAM,IAElC,EAAK8D,sBAAsBN,EAAMC,GACjC,EAAKT,gBAAgBQ,EAAMC,IAvSV,EA0SnBW,mBAAqB,SAAC/B,GACpB,EAAKvJ,UAAS,SAACqJ,GACb,IAAMC,EAAQ,YAAOD,EAAUC,UACzBc,EAAgBd,EAASe,MAAK,SAACC,GAAD,OAAUA,IAASf,KAEvD,OADAa,EAAcI,YAAcJ,EAAcI,WACnC,CAAElB,gBA/SM,EAmTnBY,gBAAkB,SAACQ,EAAMpJ,GAAW,IAC1BuI,EADyB,eACT,EAAK5J,OAArB4J,OACRA,EAAOa,GAAQ,GACf,IAAMa,EAAU,8CA6BhB,GAvBa,YAATb,IACGpJ,EAEMiK,EAAQC,KAAKlK,KACtBuI,EAAO4B,QACL,2UAHF5B,EAAO4B,QAAU,kHAOR,cAATf,IACGpJ,EAEMiK,EAAQC,KAAKlK,KACtBuI,EAAO6B,UACL,mTAHF7B,EAAO6B,UAAY,0FAOV,eAAThB,GAAyBpJ,GAASiK,EAAQC,KAAKlK,KACjDuI,EAAO8B,WACL,iVAGS,aAATjB,GAAuBpJ,EAAO,CAChC,IAAMsK,EAAW,IAAIC,KACfC,EAAY,IAAID,KAAKvK,GAC3BsK,EAASG,aAAY,IAAIF,MAAOG,cAAgB,MAC5CF,EAAY,IAAID,MAAUD,EAAWE,KACvCjC,EAAOoC,SAAW,sJAStB,GALa,aAATvB,GAAuBpJ,GArCP,iBAqC4BkK,KAAKlK,KACnDuI,EAAOqC,SACL,6YAGS,UAATxB,EAAkB,CAAC,IACbyB,EAAU,EAAKlM,MAAfkM,MACH7K,IAAS,OAAC6K,QAAD,IAACA,OAAD,EAACA,EAAO7K,QAGhBA,IA9CS,WA8CUkK,KAAKlK,KAC1BuI,EAAOuC,MAAQ,4KAEb9K,KAAS,OAAC6K,QAAD,IAACA,OAAD,EAACA,EAAO7K,SACnBuI,EAAOsC,MAAQ,KANjBtC,EAAOuC,MAAQ,0LAWnB,GAAa,UAAT1B,EAAkB,CAAC,IACb0B,EAAU,EAAKnM,MAAfmM,MACH9K,IAAS,OAAC8K,QAAD,IAACA,OAAD,EAACA,EAAO9K,QAGhBA,IA3DS,4CA2DUkK,KAAKlK,KAC1BuI,EAAOsC,MAAQ,kFAEb7K,KAAS,OAAC8K,QAAD,IAACA,OAAD,EAACA,EAAO9K,SACnBuI,EAAOuC,MAAQ,KANjBvC,EAAOsC,MAAQ,0LAWN,YAATzB,GAAsBpJ,IAnEP,KAoEFkK,KAAKlK,GAClBuI,EAAON,QAAU,8MACRjI,EAAMoF,OAAS,GAAKpF,EAAMoF,OAAS,KAC5CmD,EAAON,QAAU,2NAIrB,IAAM8C,EAAcC,OAAOC,KAAK1C,GAAQ2C,OACtC,SAAC9B,GAAD,OAAWb,EAAOa,IAAkB,YAATA,KAI7B,OADA,EAAK1K,SAAS,CAAE6J,SAAQwC,gBACjBA,GA1YU,EA6YnBI,aAAe,WACb,IAAIJ,EAUJ,OARA,EAAKK,QAAQC,SAAQ,SAACC,GACpB,GAAsB,UAAlBA,EAAMC,QAAqB,CAAC,IACtBnC,EAAgBkC,EAAhBlC,KAAMpJ,EAAUsL,EAAVtL,MACd+K,EAAc,EAAKnC,gBAAgBQ,EAAMpJ,OAI7C,EAAKtB,SAAS,CAAE8M,cAAc,IACvBT,GAxZU,EA2ZnBU,cAAgB,SAACxD,EAASyD,GACxB,OACE,kBAACC,EAAA,EAAUC,KAAX,CACEjM,UAAS,+BACA,OAAPsI,QAAO,IAAPA,OAAA,EAAAA,EAASG,SACL,8BACA,+BAENjF,IAAKuI,GAEL,yBAAK/L,UAAU,0BACb,yBAAKA,UAAU,wBAAwBsI,EAAQjI,OAC/C,yBAAKL,UAAU,uBAAuBsI,EAAQG,SAC9C,yBAAKzI,UAAU,uBAAuBsI,EAAQ4C,QAEhD,yBAAKlL,UAAU,2BACb,kBAACgB,EAAA,EAAD,CAASC,MAAOqH,EAAQiB,WAAa,yGAAsB,8CACzD,8BACE,kBAAC2C,EAAA,EAAD,CACE3H,QAAS+D,EAAQiB,WACjBjJ,SAAU,kBAAM,EAAK+J,mBAAmB/B,IACxCvG,MAAM,UACNoK,KAAK,QACL1C,KAAI,oBAAesC,GACnB5L,IAAG,oBAAe4L,GAClBK,SAAQ,UAAK,GAAa,EAARL,EAAY,GAC9BlK,WAAY,CACV,aAAc,mBACd,eAAgByG,EAAQjI,WAKhC,kBAACiB,EAAA,EAAD,CACEtB,UAAU,sCACVwB,QAAS,SAACjB,GACRnB,QAAQC,IAAI,yIAEZ,EAAK2J,iBAAiBV,IAExBmB,KAAI,0BAAqBsC,GACzB5L,IAAG,0BAAqB4L,GACxBK,SAAQ,UAAK,GAAa,EAARL,EAAY,IAE9B,kBAAC/K,EAAA,EAAD,CAASC,MAAM,kFACb,kBAACmF,EAAA,EAAD,CACEpG,UAAU,+CACV+B,MAAM,UACNoC,UAAWkI,QAIjB,kBAAC/K,EAAA,EAAD,CACEtB,UAAU,qCACVwB,QAAS,kBAAM,EAAKgH,8BAA8BF,IAClDmB,KAAI,4BAAuBsC,GAC3B5L,IAAG,4BAAuB4L,GAC1BK,SAAQ,UAAK,GAAa,EAARL,EAAY,IAE9B,kBAAC/K,EAAA,EAAD,CAASC,MAAM,8CACb,kBAACmF,EAAA,EAAD,CACEpG,UAAU,+CACV+B,MAAM,WAFR,uBAvdO,EAoenBuK,eAAiB,SAACjE,GAChB,OACE,kBAAC2D,EAAA,EAAD,CAAWO,YAAU,EAACvM,UAAU,iBAC7BqI,EAASxE,KAAI,SAACyE,EAASyD,GAAV,OAAoB,EAAKD,cAAcxD,EAASyD,QArelE,EAAK/M,MAAQ,CACXkM,MAAO,CAAE7K,MAAO,IAChB8K,MAAO,CAAE9K,MAAO,IAChBqI,0BAA2B,CAAE3B,MAAM,EAAOxB,KAAM,GAAI0B,KAAM,IAE1DmE,aAAa,EACbS,cAAc,EACdjD,OAAQ,CACN4B,QAAS,GACTC,UAAW,GACXC,WAAY,GACZM,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,MAAO,GACP7C,QAAS,IAEXkB,QAAS,CACPgB,SAAS,EACTC,WAAW,EACXC,YAAY,EACZM,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,OAAO,EACP7C,SAAS,IA3BI,E,8DAgCD1J,GAAQ,IAAD,OACvBQ,QAAQC,IAAI,uBADW,MAEKT,EAApBoI,YAFe,MAER,GAFQ,EAEJD,EAASnI,EAATmI,KAFI,EAenBnI,EAAM2G,KAfa,IAIrBiH,WAJqB,MAIf,KAJe,MAKrBhC,eALqB,MAKX,GALW,MAMrBC,iBANqB,MAMT,GANS,MAOrBC,kBAPqB,MAOR,GAPQ,MAQrBM,gBARqB,MAQV,GARU,MASrB3C,gBATqB,MASV,GATU,MAUrB6C,aAVqB,MAUb,CAAE7K,MAAO,IAVI,MAWrB8K,aAXqB,MAWb,CAAE9K,MAAO,IAXI,MAYrBoM,cAZqB,MAYZ,KAZY,MAarBxB,gBAbqB,MAaV,GAbU,MAcrByB,gBAdqB,MAcV,GAdU,EAiBjB7D,EAA4B,QAAT7B,EAEzB1H,KAAKP,SACH,CACEyN,MACAxF,OACAwD,UACAC,YACAC,aACAM,WACA1C,QAAS,GACTD,WACA6C,QACAC,QACAsB,SACAxB,WACAyB,WACA7D,mBACAX,YAAa,GAEbkD,aAAa,EACbS,cAAc,EACdjD,OAAQ,CACN4B,QAAS,GACTC,UAAW,GACXC,WAAY,GACZM,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,MAAO,GACP7C,QAAS,IAEXkB,QAAS,CACPgB,SAAS,EACTC,WAAW,EACXC,YAAY,EACZM,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,OAAO,EACP7C,SAAS,KAGb,kBAAMvB,GAAQ,EAAK+B,KAAK0B,QAAQzB,a,qCAIpB,IAAD,OACb3J,QAAQC,IAAI,sBACZC,KAAKmM,QAAUJ,OAAOC,KAAKhM,KAAKwJ,MAAMjF,KAAI,SAAC1D,GAAD,OAAS,EAAK2I,KAAK3I,MAE7Db,KAAKmM,QAAQC,SAAQ,SAACvL,GACpBA,EAAIwM,WAAa,SAACpM,GAAD,OAAW,EAAKqM,SAASrM,S,gDAIpBsM,GACxBzN,QAAQC,IAAI,6BAEVC,KAAKV,MAAM2G,OAASsH,EAAUtH,MAC9BjG,KAAKV,MAAMoI,OAAS6F,EAAU7F,MAE9B1H,KAAKwN,kBAAkBD,K,yCAIRE,EAAW3E,EAAW4E,GACvC5N,QAAQC,IAAI,sBACZC,KAAK2N,iB,+BAGE1M,GACPnB,QAAQC,IAAI,qBACZ,IAAMsM,EAAQpL,EAAMC,OACpB,GAAsB,KAAlBD,EAAM2M,QAAgB,CACxB,GAAsB,WAAlBvB,EAAMC,QAAsB,OAEhC,GAAsB,UAAlBD,EAAMC,SAAsC,aAAfD,EAAM3E,KAAqB,CAC1D,IAAMsB,EAAUhJ,KAAKN,MAAMqJ,SAASe,MAClC,SAACd,GAAD,OAAaA,EAAQjI,QAAUsL,EAAMtJ,QAAQiG,WAG/C,YADAhJ,KAAK+K,mBAAmB/B,GAI1B/H,EAAM4M,iBAEN,IAAMC,EAAc9N,KAAKmM,QAAQ4B,MAAK,SAAChI,EAAGiI,GAAJ,OAAUjI,EAAE+G,SAAWkB,EAAElB,YACzDmB,EACJH,EAAYI,WAAU,SAACC,GAAD,OAAaA,IAAY9B,KAAS,EACpD+B,EAAON,EAAYG,GACzBG,GAAQA,EAAK3E,W,+BAgWP,IAAD,SAC8CzJ,KAAKV,MAAlDmI,EADD,EACCA,KAAM4G,EADP,EACOA,kBAAmBC,EAD1B,EAC0BA,gBAD1B,EAmBHtO,KAAKN,MAhBPgI,EAHK,EAGLA,KACAwD,EAJK,EAILA,QACAC,EALK,EAKLA,UACAC,EANK,EAMLA,WACAM,EAPK,EAOLA,SACA3C,EARK,EAQLA,SACAC,EATK,EASLA,QACA4C,EAVK,EAULA,MACAC,EAXK,EAWLA,MACAF,EAZK,EAYLA,SACApC,EAbK,EAaLA,iBACAH,EAdK,EAcLA,0BACAE,EAfK,EAeLA,OACAY,EAhBK,EAgBLA,QAEAqC,GAlBK,EAiBLT,YAjBK,EAkBLS,cAEI5K,EACK,QAAT+F,EACI,wIACS,SAATA,EACA,gKACA,GACN,OACE,sCACG,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAA2B3B,OAC3B,kBAACM,EAAA,EAAD,CACErH,UAAU,aACV+G,KAAMA,EACNO,OAAQqG,EACRxB,KAAK,KACL5E,UAAQ,EACRC,SAAS,SACTC,UAAU,GAEV,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,KAAc3G,IAEhB,kBAACoG,EAAA,EAAMQ,KAAP,KACE,kBAACgG,EAAA,EAAD,CACuC7N,UAAU,YAC/C8N,aAAa,OAEb,kBAACD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,8CAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAACP,EAAA,EAAKS,QAAN,CACEtH,KAAK,OACLhH,UACE4I,EAAO4B,UAAYhB,EAAQgB,SAAWqB,GAClC,UACA,GAENpL,YAAY,wFACZJ,MAAOmK,EACPf,KAAM,UACNnJ,SAAUhB,KAAKgB,SACfH,IAAI,UACJiM,SAAS,MAEVxD,EAAO4B,UAAYhB,EAAQgB,SAAWqB,IACrC,yBAAK7L,UAAU,iBAAiB4I,EAAO4B,WAI7C,kBAACqD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,sBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAACP,EAAA,EAAKS,QAAN,CACEtH,KAAK,OACLhH,UACE4I,EAAO6B,YAAcjB,EAAQiB,WAAaoB,GACtC,UACA,GAENpL,YAAY,gEACZJ,MAAOoK,EACPhB,KAAM,YACNnJ,SAAUhB,KAAKgB,SACfH,IAAI,YACJiM,SAAS,MAEVxD,EAAO6B,YACLjB,EAAQiB,WAAaoB,IACpB,yBAAK7L,UAAU,iBAAiB4I,EAAO6B,aAI/C,kBAACoD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,oDAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAACP,EAAA,EAAKS,QAAN,CACEtH,KAAK,OACLhH,UACE4I,EAAO8B,aACNlB,EAAQkB,YAAcmB,GACnB,UACA,GAENpL,YAAY,8FACZJ,MAAOqK,EACPjB,KAAM,aACNnJ,SAAUhB,KAAKgB,SACfH,IAAI,aACJiM,SAAS,MAEVxD,EAAO8B,aACLlB,EAAQkB,YAAcmB,IACrB,yBAAK7L,UAAU,iBAAiB4I,EAAO8B,cAK/C,kBAACmD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,6EAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAACP,EAAA,EAAKS,QAAN,CACEtH,KAAK,OACLhH,UACE4I,EAAOoC,WAAaxB,EAAQwB,UAAYa,GACpC,UACA,GAENpL,YAAY,uHACZgJ,KAAM,WACNpJ,MAAO2K,EACP1K,SAAUhB,KAAKgB,SACfH,IAAI,WACJiM,SAAS,MAEVxD,EAAOoC,WAAaxB,EAAQwB,UAAYa,IACvC,yBAAK7L,UAAU,iBAAiB4I,EAAOoC,YAKnC,SAAThE,GACC,kBAAC6G,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,+FAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAACP,EAAA,EAAKS,QAAN,CACEtH,KAAK,OACLhH,UACE4I,EAAOqC,WAAazB,EAAQyB,UAAYY,GACpC,UACA,GAENpL,YAAY,4EACZJ,MAAO4K,EACPxB,KAAM,WACNnJ,SAAUhB,KAAKgB,SACfH,IAAI,WACJiM,SAAS,MAEVxD,EAAOqC,WACLzB,EAAQyB,UAAYY,IACnB,yBAAK7L,UAAU,iBAAiB4I,EAAOqC,YAMjD,kBAAC4C,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,SAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAACG,EAAA,EAAD,CAAYvO,UAAU,IACpB,kBAACwO,EAAA,EAAD,CAEExH,KAAK,OACLhH,UACE4I,EAAOsC,QAAU1B,EAAQ0B,OAASW,GAC9B,UACA,GAENpL,YAAY,mDACZgJ,KAAM,QACNpJ,MAAO6K,EAAM7K,MACbC,SAAUhB,KAAKgB,SACfH,IAAI,QACJiM,SAAS,MAED,SAATpF,GACC,kBAACuH,EAAA,EAAWE,OAAZ,KACE,kBAACF,EAAA,EAAWG,KAAZ,MACQ,OAALxD,QAAK,IAALA,OAAA,EAAAA,EAAOhB,WACN,kBAAClJ,EAAA,EAAD,CAASC,MAAM,wFACb,kBAACmF,EAAA,EAAD,CACErE,MAAM,UACNoC,UAAWwK,OAIf,kBAAC3N,EAAA,EAAD,CAASC,MAAM,oGACb,kBAACmF,EAAA,EAAD,CACErE,MAAM,UACNoC,UAAWyK,UAQxBhG,EAAOsC,QAAU1B,EAAQ0B,OAASW,IACjC,yBAAK7L,UAAU,iBAAiB4I,EAAOsC,SAK7C,kBAAC2C,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,8CAGA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACP,kBAACG,EAAA,EAAD,CAAYvO,UAAU,IACpB,kBAACuO,EAAA,EAAWM,QAAZ,KACE,kBAACN,EAAA,EAAWG,KAAZ,YAEF,kBAACF,EAAA,EAAD,CACExH,KAAK,MACLhH,UACE4I,EAAOuC,QAAU3B,EAAQ2B,OAASU,GAC9B,UACA,GAENpL,YAAY,wFACZgJ,KAAM,QACNpJ,MAAO8K,EAAM9K,MACbC,SAAUhB,KAAKgB,SACfH,IAAI,QACJiM,SAAS,MAED,SAATpF,GACC,kBAACuH,EAAA,EAAWE,OAAZ,KACE,kBAACF,EAAA,EAAWG,KAAZ,MACQ,OAALvD,QAAK,IAALA,OAAA,EAAAA,EAAOjB,WACN,kBAAClJ,EAAA,EAAD,CAASC,MAAM,wFACb,kBAACmF,EAAA,EAAD,CACErE,MAAM,UACNoC,UAAWwK,OAIf,kBAAC3N,EAAA,EAAD,CAASC,MAAM,oGACb,kBAACmF,EAAA,EAAD,CACErE,MAAM,UACNoC,UAAWyK,UAQxBhG,EAAOuC,QAAU3B,EAAQ2B,OAASU,IACjC,yBAAK7L,UAAU,iBAAiB4I,EAAOuC,SAK7C,kBAAC0C,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,6EAICvF,EACC,kBAACwF,EAAA,EAAD,CACED,GAAI,GACJxM,MAAO,CACLkN,QAAS,OACTC,cAAe,WAGjB,yBAAK/O,UAAU,qBACb,kBAAC6N,EAAA,EAAKS,QAAN,CACEtH,KAAK,OACLgI,UAAU,UACVhP,UACE4I,EAAON,UAAYkB,EAAQlB,SAAWuD,GAClC,UACA,GAENpL,YAAY,iHACZgJ,KAAM,UACNpJ,MAAOiI,EACPhI,SAAUhB,KAAKgB,SACfH,IAAI,UACJiM,SAAS,MAEX,yBAAKpM,UAAU,wBACb,kBAACsB,EAAA,EAAD,CACEtB,UAAU,kBACVwB,QAASlC,KAAK4J,YACdO,KAAK,mBACLtJ,IAAI,mBACJiM,SAAS,MAET,kBAACpL,EAAA,EAAD,CAASC,MAAM,0DACb,kBAACmF,EAAA,EAAD,CACEpG,UAAU,uBACV+B,MAAM,WAFR,UASJ,kBAACT,EAAA,EAAD,CACEtB,UAAU,kBACVwB,QAAS,SAACjB,GACRnB,QAAQC,IAAI,sJACZ,EAAK8I,oBAEPsB,KAAK,oBACLtJ,IAAI,oBACJiM,SAAS,MAET,kBAACpL,EAAA,EAAD,CAASC,MAAM,oDACb,kBAACmF,EAAA,EAAD,CACEpG,UAAU,uBACV+B,MAAM,WAFR,aAUP6G,EAAON,UAAYkB,EAAQlB,SAAWuD,IACrC,yBAAK7L,UAAU,iBAAiB4I,EAAON,UAI3C,kBAAC+F,EAAA,EAAD,CACED,GAAI,GACJxM,MAAO,CACLkN,QAAS,OACTG,WAAY,WAGd,kBAAC3N,EAAA,EAAD,CACEtB,UAAU,kBACVwB,QAAS,SAACjB,GACRnB,QAAQC,IAAI,iHACZ,EAAK2J,oBAEPS,KAAK,mBACLtJ,IAAI,mBACJiM,SAAS,KAET,kBAACpL,EAAA,EAAD,CAASC,MAAM,oDACb,kBAACmF,EAAA,EAAD,CACEpG,UAAU,uBACV+B,MAAM,WAFR,yBAWR,kBAACsM,EAAA,EAAD,CAAKD,GAAI,IAAK/F,GAAY/I,KAAKgN,eAAejE,OAIpD,kBAAChB,EAAA,EAAMS,OAAP,KAIE,kBAAC,IAAD,CAAQtG,QAASmM,GAAjB,oDACA,kBAAC,IAAD,CAEE5L,MAAM,UACNpB,QAAQ,YACRX,UAAU,kBACVwB,QAAS,WACP,IAAM0N,EAAY,EAAK1D,eACvBpM,QAAQC,IAAI,cAAe6P,GACvBA,IACFvB,IACAC,EAAgB,EAAK5O,SAGzByK,KAAK,gBACLtJ,IAAI,gBACJiM,SAAQ,UAAK,IAAyB,GAAX,OAAR/D,QAAQ,IAARA,OAAA,EAAAA,EAAU5C,SAAc,GAAK,IAflD,4DAsBLiD,GACC,kBAAC,GAAD,CACE3B,KAAM2B,EAA0B3B,KAChCC,KAAK,iBACLzB,KAAMmD,EAA0BnD,KAChC0B,KAAMyB,EAA0BzB,KAChCC,cAAe5H,KAAKqJ,+BACpBxB,eAAgB7H,KAAK0I,qB,GA54BO9I,IAAM8C,YCwX/BmN,GA7YD,CACZ,CACE3C,IAAK,MACLnE,SAAU,CACR,CACEhI,MAAO,UACPoI,QAAS,sJACTyC,MAAO,eACP3B,YAAY,GAGd,CACElJ,MAAO,UACPoI,QAAS,6HAETyC,MAAO,eACP3B,YAAY,IAGhBiB,QAAS,uCACTC,UAAW,2BACXC,WAAY,mDACZM,SAAU,aACVoE,SAAU,EACV3C,QAAQ,EACRxB,SAAU,OAIVC,MAAO,CACL7K,MAAO,eACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAGbwC,SAAU,CACR2C,OAAQ,SACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CACR,CACEhI,MAAO,UAEPoI,QAAS,6HACTyC,MAAO,eACP3B,YAAY,GAEd,CAAElJ,MAAO,WACT,CACEA,MAAO,UAEPoI,QAAS,sJACTyC,MAAO,eACP3B,YAAY,GAEd,CACElJ,MAAO,UAEPoI,QAAS,yIAEX,CACEpI,MAAO,UAEPoI,QAAS,+IACTyC,MAAO,eACP3B,YAAY,IAGhBiB,QAAS,yDACTC,UAAW,uCACXO,SAAU,mBACVoE,SAAU,EACV3C,QAAQ,EACRxB,SAAU,SAGVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAEbwC,SAAU,CACR2C,OAAQ,UACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,YACpBmK,QAAS,iCACTC,UAAW,iCACXC,WAAY,yDACZ0E,SAAU,EACV3C,QAAQ,EAIRC,SAAU,CACR2C,OAAQ,UACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,YACpBoK,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UAGVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAEbwC,SAAU,CACR2C,OAAQ,SACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,YACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UAEVE,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAGbwC,SAAU,CACR2C,OAAQ,SACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,YACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAGbwC,SAAU,CACR2C,OAAQ,SACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,YACpB+O,SAAU,EACV3C,QAAQ,EACRjC,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZO,SAAU,UACVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAEbwC,SAAU,CACR2C,OAAQ,UAGVrQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,aACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVC,MAAO,iBACPC,MAAO,aACPuB,SAAU,CACR2C,OAAQ,SACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,aACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAEbwC,SAAU,CACR2C,OAAQ,UACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,aACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAEbwC,SAAU,CAER4C,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,aACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAEbwC,SAAU,CACR2C,OAAQ,UACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,YACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVE,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAMblL,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,aACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAEbwC,SAAU,CACR2C,OAAQ,UACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,aACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAEbwC,SAAU,CACR2C,OAAQ,UACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,aACpBmK,QAAS,mDACTC,UAAW,6CACXC,WAAY,mDACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbwC,SAAU,CACR2C,OAAQ,UACRC,KAAM,oBAERtQ,MAAO,IAET,CACEwN,IAAK,MACLnE,SAAU,CAAC,CAAEhI,MAAO,YACpBmK,QAAS,yDACTC,UAAW,uCACXC,WAAY,+DACZ0E,SAAU,EACV3C,QAAQ,EACRxB,SAAU,UACVC,MAAO,CACL7K,MAAO,iBACP6J,WAAW,GAEbiB,MAAO,CACL9K,MAAO,aACP6J,WAAW,GAEbwC,SAAU,CACR2C,OAAQ,UACRC,KAAM,oBAERtQ,MAAO,KCpSLuQ,GAAa,SAACC,EAAD,GAA4D,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,gBACtD,OAAOH,EAAI,KAAO,GAAKA,EAAI,MAAQ,GAC/BC,EACA,CAAC,EAAG,EAAG,GAAGlH,SAASiH,EAAI,MAAQ,CAAC,GAAI,GAAI,IAAIjH,SAASiH,EAAI,KACzDE,EACAC,GAUAC,GAAe,SAACJ,GAIpB,OAAOD,GAAWC,EAAG,CAAEC,WAHJ,2EAGgBC,kBAFT,iFAE4BC,gBAD9B,oFAIpBE,GAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cAKSE,G,kDACnB,WAAYvR,GAAQ,IAAD,8BACjB,cAAMA,IAqPRmB,YAAc,SAACjB,GACbM,QAAQC,IAAI,eACZD,QAAQC,IAAI,eAAgBP,GAIP,EAAKC,SAAS,CAAEwG,KAAM4J,MA5P1B,EA+PnBiB,YAAc,SAAC7N,GACb,IAAMgD,EAAO,EAAKvG,MAAMuG,KACxB,OAAQhD,GACN,IAAK,MACH,OAAOgD,EAGT,IAAK,SACH,OAAOA,EAAKH,QAAO,SAACiL,GAAD,OAAUA,EAAK5D,UAGpC,IAAK,UACH,OAAOlH,EAAKH,QAAO,SAACiL,GAAD,OAAWA,EAAK5D,YA3QtB,EAiRnBjK,aAAe,SAACD,GACdnD,QAAQC,IAAI,cAAekD,GAC3B,EAAKxD,SAAS,CAAEwD,eAnRC,EAsRnB+N,YAAc,WAAgB,IAAfrJ,EAAc,uDAAP,GACdsJ,EAAU,CAAExJ,MAAM,EAAME,QAC9B,EAAKlI,SAAS,CAAEwR,aAxRC,EA2RnBC,YAAc,WAEZ,EAAKzR,SAAS,CAAEwR,QADA,CAAExJ,MAAM,EAAOE,KAAM,OA5RpB,EAgSnBwJ,UAAY,SAACC,GACXtR,QAAQC,IAAI,yCAAaqR,EAAQlG,UAjShB,EAqSnBmG,0BAA4B,WAA2B,IAA1BpL,EAAyB,uDAAlB,GAAI0B,EAAc,uDAAP,GACvC2J,EAAwB,CAAE7J,MAAM,EAAMxB,OAAM0B,QAClD,EAAKlI,SAAS,CAAE6R,2BAvSC,EA0SnBC,2BAA6B,WAE3B,EAAK9R,SAAS,CAAE6R,sBADc,CAAE7J,MAAM,EAAOxB,KAAM,GAAI0B,KAAM,OA3S5C,EA+SnB6J,UAAY,YAA6D,IAA1DtE,EAAyD,EAAzDA,IAAyD,EAApDhC,QAAoD,EAAtCC,UAAsC,EAAtBC,WAOhD,EAAK3L,UAAS,SAACqJ,GACb,IAAM7C,EAAI,YAAO6C,EAAU7C,MACrB8K,EAAO9K,EAAK6D,MAAK,SAACiH,GAAD,OAAUA,EAAK7D,MAAQA,KAO9C,OANA6D,EAAK5D,QAAU4D,EAAK5D,OAMb,CAAElH,YA/TM,EAmUnBwL,WAAa,SAAC5B,GACZ/P,QAAQC,IAAI,eAAgB8P,GAE5B,IAAM6B,EAAQ7B,EAAM1J,OAyBpB,GAxBA0J,EAAMzD,SAAQ,SAAC2E,GACb,EAAKS,UAAUT,GAOXA,EALF7D,IAHoB,MAQlB6D,EAJF7F,eAJoB,MAIV,GAJU,IAQlB6F,EAHF5F,iBALoB,MAKR,GALQ,IAQlB4F,EAFF3F,kBANoB,MAMP,GANO,EAOpB+B,EACE4D,EADF5D,OAEY,IAAVuE,IACF,EAAKV,YAAL,mFACkB9F,EADlB,YAC6BC,EAD7B,YAC0CC,EAD1C,YAEI+B,EAAS,eAAO,qBAFpB,iEAMArN,QAAQC,IAAR,mFACkBmL,EADlB,YAC6BC,EAD7B,YAC0CC,EAD1C,YAEI+B,EAAS,eAAO,qBAFpB,qEAQAuE,EAAQ,EAAG,CACb,IAAMC,EAtXH1B,GAsX6ByB,EAtXf,CAAEvB,WAHJ,2EAGgBC,kBAFT,2EAE4BC,gBAD9B,mFAwXduB,EAAW,UACf/B,EAAM5D,OAAM,SAAC8E,GAAD,OAAUA,EAAK5D,UAAU,eAAO,qBAD7B,uEAEJuE,EAAQ,KAAO,EAAI,GAAK,SAFpB,YAE2BA,EAF3B,YAEoCC,GACrD,EAAKX,YAAYY,GAEjB9R,QAAQC,IAAI6R,KAtWG,EA0WnBC,4BAA8B,WAA2B,IAA1B5L,EAAyB,uDAAlB,GAAI0B,EAAc,uDAAP,GACzCmK,EAA0B,CAAErK,MAAM,EAAMxB,OAAM0B,QACpD,EAAKlI,SAAS,CAAEqS,6BA5WC,EA+WnBC,6BAA+B,WAE7B,EAAKtS,SAAS,CAAEqS,wBADgB,CAAErK,MAAM,EAAOxB,KAAM,GAAI0B,KAAM,OAhX9C,EAoXnBqK,iCAAmC,WAA2B,IAA1B/L,EAAyB,uDAAlB,GAAI0B,EAAc,uDAAP,GAC9CsK,EAA+B,CAAExK,MAAM,EAAMxB,OAAM0B,QACzD,EAAKlI,SAAS,CAAEwS,kCAtXC,EAyXnBC,kCAAoC,WAElC,EAAKzS,SAAS,CAAEwS,6BADqB,CAAExK,MAAM,EAAOxB,KAAM,GAAI0B,KAAM,OA1XnD,EA8XnBwK,qBAAuB,YAKjB,EAJJjF,IAII,EAHJhC,QAGI,EAFJC,UAEI,EADJC,YAlYiB,EA0YnBgH,sBAAwB,SAACvC,GACvB/P,QAAQC,IAAI,0BAA2B8P,GAEvCA,EAAMzD,SAAQ,SAAC2E,GAAD,OAAU,EAAKoB,qBAAqBpB,MAClD,IAAMW,EAAQ7B,EAAM1J,OACpB,GAAIuL,EAAQ,EAAG,CACb,IAAMC,EAAWrB,GAAaoB,GACxBE,EAAW,6BAAeF,EAAf,YAAwBC,EAAxB,yPAEjB7R,QAAQC,IAAR,6BACc2R,EADd,YACuBC,EADvB,0PAGA,EAAKX,YAAYY,OACZ,CAAC,IAAD,EACqD/B,EAAM,GAD3D,IACG3E,eADH,MACa,GADb,MACiBC,iBADjB,MAC6B,GAD7B,MACiCC,kBADjC,MAC8C,GAD9C,EAEL,EAAK4F,YAAL,sGAC2B9F,EAD3B,YACsCC,EADtC,YACmDC,EADnD,oPAIAtL,QAAQC,IAAR,sGAC2BmL,EAD3B,YACsCC,EADtC,YACmDC,EADnD,sPA7Ze,EAmanBiH,cAAgB,WAA2B,IAA1B3K,EAAyB,uDAAlB,GAAIzB,EAAc,uDAAP,GAC3BqM,EAAY,CAAE7K,MAAM,EAAMC,OAAMzB,QACtC,EAAKxG,SAAS,CAAE6S,eAraC,EAwanBC,eAAiB,WAEf,EAAK9S,SAAS,CAAE6S,UADE,CAAE7K,MAAM,EAAOC,KAAM,GAAIzB,KAAM,OAzahC,EA6anBuM,SAAW,SAACC,GACV3S,QAAQC,IAAI,sHAAwB0S,GADX,IAGvB/K,EAUE+K,EAVF/K,KAHuB,EAarB+K,EATFvF,WAJuB,MAIjB,KAJiB,IAarBuF,EARFvH,eALuB,MAKb,GALa,IAarBuH,EAPFtH,iBANuB,MAMX,GANW,IAarBsH,EANFrH,kBAPuB,MAOV,GAPU,IAarBqH,EALF/G,gBARuB,MAQZ,GARY,EAUvB3C,GAGE0J,EAJF9G,SAIE8G,EAHF1J,UACA6C,EAEE6G,EAFF7G,MACAC,EACE4G,EADF5G,MAGI5F,EAAI,YAAO,EAAKvG,MAAMuG,MAE5B,GAAa,QAATyB,EAAgB,CAClB5H,QAAQC,IAAI,4HAAyB0S,GAErC,IAAMvF,EAAM5B,KAAKoH,MACjBzM,EAAK+D,KAAK,CACRkD,MACAhC,QAASA,EAAQyH,OACjBxH,UAAWA,EAAUwH,OACrBvH,WAAYA,EAAWuH,OACvBjH,WACAE,QAEAC,QACA9C,WACAoE,QAAQ,IAGZ,GAAa,SAATzF,EAAiB,CACnB5H,QAAQC,IAAI,gKAA+B0S,GADxB,IAEXtF,EAAsCsF,EAAtCtF,OAAQxB,EAA8B8G,EAA9B9G,SAAiByB,GAAaqF,EAApB/S,MAAoB+S,EAAbrF,UAE7BwF,EAAY3M,EAAKiI,WAAU,SAAC6C,GAAD,OAAUA,EAAK7D,MAAQA,KACtDjH,EAAK2M,GAAa,CAChB1F,MACAhC,QAASA,EAAQyH,OACjBxH,UAAWA,EAAUwH,OACrBvH,WAAYA,EAAWuH,OACvBjH,WACAE,QACAC,QACA9C,WACAoE,SAEAxB,SAAUA,EAASgH,OACnBvF,YAGJ,EAAK3N,SAAS,CAAEwG,SAChB,EAAK+K,YAAL,mFACkB9F,EADlB,YAC6BC,EAD7B,YAC0CC,EAD1C,YAEa,QAAT1D,EAAiB,mDAAa,gDAnelC,EAAKvE,iBAAmBvD,IAAMC,YAE9B,EAAKH,MAAQ,CACXuD,UAAW,MACXqO,sBAAuB,CAAE7J,MAAM,EAAOxB,KAAM,GAAI0B,KAAM,IACtDmK,wBAAyB,CAAErK,MAAM,EAAOxB,KAAM,GAAI0B,KAAM,IACxDsK,6BAA8B,CAAExK,MAAM,EAAOxB,KAAM,GAAI0B,KAAM,IAC7D2K,UAAW,CACT7K,MAAM,EACNC,KAAM,GACNzB,KAAM,IAERgL,QAAS,CACPxJ,MAAM,EACNE,KAAM,IAERrD,QAAS,CACP,CACE3C,MAAO,eACP0K,MAAO,WAKPwG,OAAQ,SAACzB,GACP,OACE,oCACGA,EAAQrI,SAAS+J,MAAM,EAAG,GAAGvO,KAAI,SAACyE,EAASyD,GAAV,OAChC,yBAAKvI,IAAKuI,EAAO/L,UAAU,kBACzB,yBAAKA,UAAU,SACL,OAAPsI,QAAO,IAAPA,OAAA,EAAAA,EAASiB,YACR,kBAACvI,EAAA,EAAD,CAASC,MAAM,0GACb,kBAACmF,EAAA,EAAD,CACErE,MAAM,UACNoC,UAAWwK,OAIf,kBAAC3N,EAAA,EAAD,CAASC,MAAM,8CACb,kBAACmF,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWyK,QAIvC,yBAAK5O,UAAU,QACZsI,EAAQjI,OACP0L,IAAU2E,EAAQrI,SAAS5C,OAAS,GAAe,IAAVsG,IACzC2E,EAAQrI,SAAS5C,OAAS,GAC1B,cAUhB,CACExE,MAAO,qBACP0K,MAAO,UACPwG,OAAQ,oBAAG3H,eAAH,MAAa,GAAb,MAAiBC,iBAAjB,MAA6B,GAA7B,MAAiCC,kBAAjC,MAA8C,GAA9C,kBACHF,EADG,YACQC,EADR,YACqBC,KAS/B,CACEzJ,MAAO,QACP0K,MAAO,QACPwG,OAAQ,gBAAGjH,EAAH,EAAGA,MAAH,OACN,yBAAKlL,UAAU,mBACP,OAALkL,QAAK,IAALA,OAAA,EAAAA,EAAO7K,QACN,oCACE,yBAAKL,UAAU,SACP,OAALkL,QAAK,IAALA,OAAA,EAAAA,EAAOhB,WACN,kBAAClJ,EAAA,EAAD,CAASC,MAAM,wFACb,kBAACmF,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWwK,OAGnC,kBAAC3N,EAAA,EAAD,CAASC,MAAM,oGACb,kBAACmF,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWyK,QAIvC,yBAAK5O,UAAU,QAAf,OAAuBkL,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAO7K,WAMxC,CACEY,MAAO,6CACP0K,MAAO,QACPwG,OAAQ,gBAAGhH,EAAH,EAAGA,MAAH,OACN,yBAAKnL,UAAU,mBACP,OAALmL,QAAK,IAALA,OAAA,EAAAA,EAAO9K,QACN,oCACE,yBAAKL,UAAU,SACP,OAALmL,QAAK,IAALA,OAAA,EAAAA,EAAOjB,WACN,kBAAClJ,EAAA,EAAD,CAASC,MAAM,wFACb,kBAACmF,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWwK,OAGnC,kBAAC3N,EAAA,EAAD,CAASC,MAAM,oGACb,kBAACmF,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWyK,QAIvC,yBAAK5O,UAAU,QAAf,aAA6BmL,EAAM9K,YAO7C,CAAEY,MAAO,8FAAoB0K,MAAO,YAwCpC,CACE1K,MAAO,2BACP0K,MAAO,WACPwG,OAAQ,YAAmB,IAAhBzF,EAAe,EAAfA,SAET,OACEA,GACE,qCACW,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU2C,SACT,6BACwB,YAAb,OAAR3C,QAAQ,IAARA,OAAA,EAAAA,EAAU2C,QACT,kBAACrO,EAAA,EAAD,CAASC,MAAM,uHACb,kBAACmF,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWkO,OAGnC,kBAACrR,EAAA,EAAD,CAASC,MAAM,4CACb,kBAACmF,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWmO,SAKhC,OAAR5F,QAAQ,IAARA,OAAA,EAAAA,EAAU4C,OACT,kBAACtO,EAAA,EAAD,CACEC,MACE,kBAAC,IAAD,CAAQsR,OAAO,kBAAkB7F,EAAS4C,OAG5C,6BACE,kBAAC,IAAD,CAAQkD,SAAO,GAAE9F,EAAS4C,YAoD5C/J,KAAM,IAlPS,E,qDA2eT,IAAD,SAUHjG,KAAKN,MARP4E,EAFK,EAELA,QAEAgN,EAJK,EAILA,sBACAQ,EALK,EAKLA,wBACAG,EANK,EAMLA,6BACAK,EAPK,EAOLA,UACArB,EARK,EAQLA,QACAhO,EATK,EASLA,UAIIgD,GAFO,IAAIqF,KAEJtL,KAAK8Q,YAAY7N,IAE9B,OACE,yBAAKvC,UAAU,aACb,kBAAC,IAAD,CAAkB6P,MAAOA,IACvB,kBAAC,IAAD,CACE5O,MAAM,GACNwR,SAAUnT,KAAKmD,iBACfmB,QAASA,EACT2B,KAAMA,EAENmN,QAAS,CACPjT,WAAW,EASXkT,oBAAqB,EAKrBC,uBAAwB,OAExBC,WAAW,EAIXrT,qBAAsB,OACtBK,iBAAkB,GAgBlBiT,SAAU,SAACpC,GAAD,MAAc,CACtB3O,MAAQ2O,EAAQjE,OAAkB,GAAT,SAG3BsG,eAAgB,QAEhBC,WAAW,EACXC,QAAQ,GAMVpU,eAAgB,WACdO,QAAQC,IAAI,mCAEd4F,WAAY,CAqBVC,QAAS,SAACtG,GACR,IAAMsU,EAAS,eAAQtU,GA2DvB,OAzDAsU,EAAU/N,QAAU+N,EAAU/N,QAAQtB,KAAI,SAAC4C,GAAY,IAAD,EACpD,GAAsB,oBAAXA,EAET,OAAOA,EAGT,GAAmB,WAAT,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQvC,IAAgB,OAEiBgP,EAAU3N,KAA7CiF,EAFkB,EAElBA,QAASC,EAFS,EAETA,UAAWC,EAFF,EAEEA,WACxBwI,EAAU3N,KAAKkH,QACjBhG,EAAO0M,KAAO,kBACZ,kBAAC/M,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWiP,OAEnC3M,EAAO4M,QAAU,iFACjB5M,EAAOjF,QAAU,SAACjB,EAAOmQ,GACvB,IAAMnL,EAAO,CAACmL,GACd,EAAKC,0BACHpL,EADF,mFAEkBiF,EAFlB,YAE6BC,EAF7B,YAE0CC,OAI5CjE,EAAO0M,KAAO,kBACZ,kBAAC/M,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWmP,OAEnC7M,EAAO4M,QAAU,uFACjB5M,EAAOjF,QAAU,SAACjB,EAAOmQ,GACvB,IAAMnL,EAAO,CAACmL,GACd,EAAKS,4BACH5L,EADF,mFAEkBiF,EAFlB,YAE6BC,EAF7B,YAE0CC,WAIzC,GAAmB,uBAAT,OAANjE,QAAM,IAANA,OAAA,EAAAA,EAAQvC,IAA4B,CAAC,IAAD,EACpBgP,EAAU3N,KAA3B2F,EADqC,EACrCA,MAAOC,EAD8B,EAC9BA,OACX,OAACD,QAAD,IAACA,OAAD,EAACA,EAAO7K,SAAS,OAAC8K,QAAD,IAACA,OAAD,EAACA,EAAO9K,QAO3BoG,EAAOlF,UAAW,EAClBkF,EAAO4M,QAAU,gHACjB5M,EAAO0M,KAAO,kBACZ,kBAAC/M,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWoP,SATnC9M,EAAOlF,UAAW,EAClBkF,EAAO4M,QAAU,4JACjB5M,EAAO0M,KAAO,kBACZ,kBAAC/M,EAAA,EAAD,CAAMrE,MAAM,WAAWoC,UAAWoP,QAWxC,OAAO,2BACF9M,GADL,IAEElF,SACEkF,EAAOlF,WAAP,UAAmBkF,EAAO+M,oBAA1B,aAAmB,OAAA/M,EAAsByM,EAAU3N,YAGlD,kBAAC,gBAAkB2N,IAE5BO,QAAS,SAAC7U,GAENA,EAAM4G,cAAgB5G,EAAM4G,aAAaC,OAAS,EACF,oBAArC7G,EAAMe,aAAaqG,cACxBpH,EAAMe,aAAaqG,cACjBpH,EAAM4G,aAAaC,QAErB7G,EAAMe,aAAaqG,cAAcC,QAC/B,MACArH,EAAM4G,aAAaC,QAEvB7G,EAAMa,WACNb,EAAMqC,MAGZ,OACE,oCACE,kBAAC,EAAD,iBACMrC,EADN,CAEEkH,iBAAkB,EAAK6L,cACvBlP,iBAAkB,EAAKA,iBACvBF,UAAWA,EACXC,aAAc,EAAKA,aACnBzC,YAAa,EAAKA,kBAM5BJ,aAAc,CACZ+T,MAAO,mIACPC,OAAQ,CACNxO,QAAS,oDAEXyO,QAAS,CACP1S,cAAe,iCACfR,kBAAmB,2IACnBsF,cAAe,iDACfrC,iBAAkB,sJAClBZ,iBAAkB,+FAEpB8Q,KAAM,CACJC,uBAAwB,0DACxBC,WAAY,mDACZC,YAAa,iFACbC,cAAe,6CACfC,QAAS,CACPC,WACE,uQACFC,cAAe,mDACfC,YAAa,2DAGjBC,WAAY,CACVC,gBAAiB,iCACjBC,mBAAoB,mCACpBC,aAAc,8CACdC,YAAa,yDACbC,gBAAiB,+DACjBC,YAAa,wCACbjR,iBAAkB,sJAClBqC,cAAe,iDACf9E,cAAe,iCACfR,kBAAmB,6IA0CvByE,QAAS,CAEa,CAClBjB,GAAI,oBACJiP,KAAM,kBAAM,kBAAC/M,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWoP,OAC7CF,QAAS,gHACTtS,SAAU,MACVS,QAAS,SAACjB,EAAOmQ,GACftR,QAAQC,IAAI,YAAaqR,GADE,MAMvBA,EAHFlG,eAHyB,MAGf,GAHe,IAMvBkG,EAFFjG,iBAJyB,MAIb,GAJa,IAMvBiG,EADFhG,kBALyB,MAKZ,GALY,EAO3BtL,QAAQC,IACN,yNADF,UAEKmL,EAFL,YAEgBC,EAFhB,YAE6BC,IAK7B,IAAMnF,EAAO,CAACmL,GACd,EAAKY,iCACH/L,EADF,mFAEkBiF,EAFlB,YAE6BC,EAF7B,YAE0CC,MAI9C,CACEyI,KAAM,kBACJ,kBAAC/M,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAW0Q,OAEnCxB,QAAS,iHACTtS,SAAU,MACVS,QAAS,SAACjB,EAAOmQ,GAAR,OAAoB,EAAKD,UAAUC,KAE9C,CACExM,GAAI,QACJiP,KAAM,OACNpS,SAAU,MACVS,QAAS,SAACjB,EAAOmQ,MAEnB,CACEyC,KAAM,kBAAM,kBAAC/M,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWkI,OAC7CgH,QAAS,iFACTtS,SAAU,MACVS,QAAS,SAACjB,EAAOmQ,GAAR,OACP,EAAKiB,cAAc,OAAQjB,KAe/B,SAACA,GAAD,MAAc,CACZyC,KAAM,kBAAM,kBAAC/M,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAW2Q,OAC7CzB,QAAS,gHACTtS,SAAU,kBACVS,QAAS,SAACjB,EAAOmQ,GACf,IAAMM,EAAQN,EAAQjL,OADK,EAMvBiL,EAAQ,GANe,IAGzBlG,eAHyB,MAGf,GAHe,MAIzBC,iBAJyB,MAIb,GAJa,MAKzBC,kBALyB,MAKZ,GALY,EAQrBzD,EACJ+J,EAAQ,EAAR,UACOA,EADP,YACgBpB,GAAaoB,IAD7B,UAEOpB,GACDoB,GAHN,YAISxG,EAJT,YAIoBC,EAJpB,YAIiCC,GAEnC,EAAK4G,iCAAiCZ,EAASzJ,IAEjDlD,OAAQ2M,EAAQqE,MACd,gBAAG7J,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,QAAsB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAO7K,UAAS,OAAC8K,QAAD,IAACA,OAAD,EAACA,EAAO9K,YAGnD,SAACqQ,GAAD,MAAc,CACZyC,KAAMzC,EAAQnF,OAAM,SAAClC,GAAD,OAAUA,EAAKoD,UAC/B,kBAAM,kBAACrG,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWmP,OACvC5C,EAAQnF,OAAM,SAAClC,GAAD,OAAWA,EAAKoD,UAC9B,kBAAM,kBAACrG,EAAA,EAAD,CAAMrE,MAAM,UAAUoC,UAAWiP,OACvC,kBAAM,MACVC,QAAS3C,EAAQnF,OAAM,SAAClC,GAAD,OAAUA,EAAKoD,UAClC,iFACA,uFACJ1L,SAAU,MACVS,QAAS,SAACjB,EAAOmQ,GACf,IAAMM,EAAQN,EAAQjL,OADK,EAMvBiL,EAAQ,GANe,IAGzBlG,eAHyB,MAGf,GAHe,MAIzBC,iBAJyB,MAIb,GAJa,MAKzBC,kBALyB,MAKZ,GALY,EAQrBzD,EACJ+J,EAAQ,EAAR,UACOA,EADP,YACgBpB,GAAaoB,IAD7B,UAEOpB,GACDoB,GAHN,YAISxG,EAJT,YAIoBC,EAJpB,YAIiCC,GAEnCgG,EAAQnF,OAAM,SAAC8E,GAAD,OAAUA,EAAK5D,UACzB,EAAKkE,0BAA0BD,EAASzJ,GACxCyJ,EAAQnF,OAAM,SAAC8E,GAAD,OAAWA,EAAK5D,WAC9B,EAAK0E,4BAA4BT,EAASzJ,IAEhDlD,OACE2M,EAAQqE,MAAK,SAAC1L,GAAD,OAAUA,EAAKoD,WAC5BiE,EAAQqE,MAAK,SAAC1L,GAAD,OAAWA,EAAKoD,aA+DnCuI,kBAAmB,SAACC,GAClB7V,QAAQC,IAAI,2DAAgB4V,EAAKxP,OAAS,qCAE5C3F,MAAO,CACLoV,IAAK,kBAAM,kBAAC9O,EAAA,EAAD,CAAMrE,MAAM,WAAZ,YAGXkB,WAAY,kBAAM,kBAACmD,EAAA,EAAD,CAAMrE,MAAM,WAAZ,iBAGpBoT,SACE,KA0EJ,kBAACC,EAAA,EAAD,CACE9R,QAAShE,KAAKkR,YACdzJ,KAAMwJ,EAAQxJ,KACdsO,MAAO,KACPC,UAAQ,EACR1T,MAAO,CACLb,SAAU,QACVwU,OAAQ,GACRC,OAAQ,OACRC,MAAO,SAGT,kBAACL,EAAA,EAAM1N,OAAP,KACE,4BAAQ1H,UAAU,WAAlB,uEASF,kBAACoV,EAAA,EAAMvN,KAAP,KACE,6BAAM0I,EAAQtJ,MAEd,6BACE,kBAAC,IAAD,CAAQyO,iBAAe,EAACC,SAAU,KAC/BC,MAASC,IAAI,GAAI,gBAY5B,kBAAC,GAAD,CACE9O,KAAM6K,EAAU7K,KAChBC,KAAM4K,EAAU5K,KAChBzB,KAAMqM,EAAUrM,KAChBoI,kBAAmBrO,KAAKuS,eACxBjE,gBAAiBtO,KAAKwS,WAExB,kBAAC,GAAD,CACE/K,KAAM6J,EAAsB7J,KAC5BC,KAAK,aACLzB,KAAMqL,EAAsBrL,KAC5B0B,KAAM2J,EAAsB3J,KAC5BC,cAAe5H,KAAKuR,2BACpB1J,eAAgB7H,KAAKyR,aAEvB,kBAAC,GAAD,CACEhK,KAAMqK,EAAwBrK,KAC9BC,KAAK,eACLzB,KAAM6L,EAAwB7L,KAC9B0B,KAAMmK,EAAwBnK,KAC9BC,cAAe5H,KAAK+R,6BACpBlK,eAAgB7H,KAAKyR,aAEvB,kBAAC,GAAD,CACEhK,KAAMwK,EAA6BxK,KACnCC,KAAK,oBACLzB,KAAMgM,EAA6BhM,KACnC0B,KAAMsK,EAA6BtK,KACnCC,cAAe5H,KAAKkS,kCACpBrK,eAAgB7H,KAAKoS,6B,GArkCQxS,IAAM8C,WC1HzBqB,QACW,cAA7ByS,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAAS/D,OAAO,kBAAC,GAAD,MAAegE,SAASC,eAAe,SD4HjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjD,GACLtU,QAAQsU,MAAMA,EAAMnD,c","file":"static/js/main.95d7a307.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  Button,\n  Tooltip,\n  IconButton,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\n\nexport default class CustomSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n    };\n    this.searchInput = React.createRef();\n  }\n\n  componentDidMount() {\n    /* this.searchInput.current.childNodes[0].childNodes[1].focus(); */\n    console.log(\"componentDidMount\");\n  }\n\n  onSearchChange = (searchText) => {\n    this.setState({ searchText });\n  };\n\n  render() {\n    const { searchText } = this.state;\n    const {\n      searchAutoFocus,\n      searchFieldAlignment,\n      showTitle,\n      classes,\n      localization,\n      searchFieldVariant,\n      searchFieldStyle,\n      icons,\n      searchUsers,\n    } = this.props;\n    return (\n      <div className=\"custom-search\">\n        <TextField\n          autoFocus={searchAutoFocus}\n          ref={this.searchInput}\n          className={`custom-search__input ${\n            searchFieldAlignment === \"left\" && showTitle === false\n              ? \"\"\n              : classes.searchField\n          }`}\n          value={searchText}\n          onChange={(event) => {\n            const searchText = event.target.value;\n            this.onSearchChange(searchText);\n          }}\n          placeholder={localization.searchPlaceholder}\n          variant={searchFieldVariant}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Tooltip title={localization.searchTooltip}>\n                  <icons.Search fontSize=\"small\" />\n                </Tooltip>\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  disabled={!searchText}\n                  onClick={() => this.onSearchChange(\"\")}\n                  aria-label={localization.clearSearchAriaLabel}\n                >\n                  <icons.ResetSearch fontSize=\"small\" aria-label=\"clear\" />\n                </IconButton>\n              </InputAdornment>\n            ),\n            style: searchFieldStyle,\n            inputProps: {\n              \"aria-label\": localization.searchAriaLabel,\n            },\n          }}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          className=\"custom-search__btn\"\n          onClick={() => searchUsers(searchText)}\n        >\n          Найти\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./CustomToolbar.scss\";\nimport CustomSearch from \"./CustomSearch\";\n\nimport {\n  Checkbox,\n  MenuItem,\n  Menu,\n  Icon,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography,\n  Tooltip,\n} from \"@material-ui/core\";\n\nimport { ButtonBootstrap } from \"react-bootstrap\";\n\nexport default class CustomToolbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnsButtonAnchorEl: null,\n      exportButtonAnchorEl: null,\n      searchText: props.searchText,\n    };\n  }\n\n  renderDefaultActions() {\n    const localization = {\n      ...this.props.localization,\n    };\n\n    return (\n      <>\n        {this.props.columnsButton && (\n          <span className=\"custom-toolbar__action\">\n            <Tooltip title={localization.showColumnsTitle}>\n              <IconButton\n                className=\"custom-toolbar__action-btn\"\n                color=\"inherit\"\n                onClick={(event) =>\n                  this.setState({\n                    columnsButtonAnchorEl: event.currentTarget,\n                  })\n                }\n                aria-label={localization.showColumnsAriaLabel}\n              >\n                <this.props.icons.ViewColumn />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              anchorEl={this.state.columnsButtonAnchorEl}\n              open={Boolean(this.state.columnsButtonAnchorEl)}\n              onClose={() => this.setState({ columnsButtonAnchorEl: null })}\n            >\n              <MenuItem\n                key={\"text\"}\n                disabled\n                style={{\n                  opacity: 1,\n                  fontWeight: 600,\n                  fontSize: 12,\n                }}\n              >\n                {localization.addRemoveColumns}\n              </MenuItem>\n              {this.props.columns.map((col) => {\n                if (!col.hidden || col.hiddenByColumnsButton) {\n                  return (\n                    <li key={col.tableData.id}>\n                      <MenuItem\n                        /* className={classes.formControlLabel} */\n                        component=\"label\"\n                        htmlFor={`column-toggle-${col.tableData.id}`}\n                        disabled={col.removable === false}\n                      >\n                        <Checkbox\n                          checked={!col.hidden}\n                          id={`column-toggle-${col.tableData.id}`}\n                          onChange={() =>\n                            this.props.onColumnsChanged(col, !col.hidden)\n                          }\n                        />\n                        <span>{col.title}</span>\n                      </MenuItem>\n                    </li>\n                  );\n                }\n                return null;\n              })}\n            </Menu>\n          </span>\n        )}\n        {this.props.exportButton && (\n          <span className=\"custom-toolbar__action\">\n            <Tooltip title={localization.exportTitle}>\n              <IconButton\n                className=\"custom-toolbar__action-btn\"\n                color=\"inherit\"\n                onClick={(event) =>\n                  this.setState({\n                    exportButtonAnchorEl: event.currentTarget,\n                  })\n                }\n                aria-label={localization.exportAriaLabel}\n              >\n                <this.props.icons.Export />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              anchorEl={this.state.exportButtonAnchorEl}\n              open={Boolean(this.state.exportButtonAnchorEl)}\n              onClose={() => this.setState({ exportButtonAnchorEl: null })}\n            >\n              <MenuItem key=\"export-csv\" onClick={this.exportCsv}>\n                {localization.exportCSVName}\n              </MenuItem>\n              <MenuItem key=\"export-pdf\" onClick={this.exportPdf}>\n                {localization.exportPDFName}\n              </MenuItem>\n            </Menu>\n          </span>\n        )}\n        <span className=\"custom-toolbar__action\">\n          <this.props.components.Actions\n            actions={\n              this.props.actions &&\n              this.props.actions.filter((a) => a.position === \"toolbar\")\n            }\n            components={this.props.components}\n          />\n        </span>\n      </>\n    );\n  }\n\n  renderSelectedActions() {\n    return (\n      <React.Fragment>\n        <this.props.components.Actions\n          actions={this.props.actions.filter(\n            (a) => a.position === \"toolbarOnSelect\"\n          )}\n          data={this.props.selectedRows}\n          components={this.props.components}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderActions() {\n    return (\n      <div className=\"custom-toolbar__actions\">\n        {this.props.selectedRows && this.props.selectedRows.length > 0\n          ? this.renderSelectedActions()\n          : this.renderDefaultActions()}\n      </div>\n    );\n  }\n\n  clickTab = (event) => {\n    const clickedTab = event.currentTarget.dataset.tabName;\n    const { activeTab, setActiveTab, materialTableRef } = this.props;\n    if (activeTab !== clickedTab) {\n      materialTableRef.current.onAllSelected(false);\n      setActiveTab(clickedTab);\n    }\n  };\n\n  render() {\n    const {\n      showTextRowsSelected,\n      selectedRows,\n      search,\n      localization,\n      showTitle,\n      title,\n      materialTableRef,\n      showModalHandler,\n      searchUsers,\n      setActiveTab,\n      activeTab,\n    } = this.props;\n\n    const titleText =\n      selectedRows && selectedRows.length > 0\n        ? typeof localization.nRowsSelected === \"function\"\n          ? localization.nRowsSelected(selectedRows.length)\n          : localization.nRowsSelected.replace(\"{0}\", selectedRows.length)\n        : showTitle\n        ? title\n        : null;\n\n    return (\n      <div\n        className=\"custom-toolbar\"\n        style={{\n          backgroundColor: selectedRows.length > 0 && \"rgb(233, 232, 243)\",\n        }}\n      >\n        {showTextRowsSelected && titleText && (\n          <div className=\"custom-selected-rows\">\n            <Typography className=\"custom-selected-rows__text\" variant=\"h6\">\n              {titleText}\n            </Typography>\n\n            <IconButton\n              className=\"custom-selected-rows__btn\"\n              onClick={(event) => {\n                materialTableRef.current.onAllSelected(false);\n              }}\n            >\n              <Tooltip title=\"Отменить выбор\">\n                <Icon color=\"primary\">clear</Icon>\n              </Tooltip>\n            </IconButton>\n          </div>\n        )}\n        {this.renderActions()}\n        {search && <CustomSearch {...this.props} searchUsers={searchUsers} />}\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          className=\"custom-toolbar__add-btn\"\n          onClick={() => {\n            materialTableRef.current.onAllSelected(false);\n            showModalHandler(\"add\");\n          }}\n        >\n          Добавить\n        </Button>\n\n        {/*  <ButtonGroup aria-label=\"Basic example\">\n          <Button variant=\"secondary\">Left</Button>\n          <Button variant=\"secondary\">Middle</Button>\n          <Button variant=\"secondary\">Right</Button>\n        </ButtonGroup> */}\n\n        <div className=\"user-tabs\">\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            className={`user-tabs__btn ${activeTab === \"all\" ? \"active\" : \"\"}`}\n            data-tab-name=\"all\"\n            onClick={(event) => this.clickTab(event)}\n          >\n            Все\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            className={`user-tabs__btn ${\n              activeTab === \"active\" ? \"active\" : \"\"\n            }`}\n            data-tab-name=\"active\"\n            onClick={this.clickTab}\n          >\n            Активные\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            className={`user-tabs__btn ${\n              activeTab === \"blocked\" ? \"active\" : \"\"\n            }`}\n            data-tab-name=\"blocked\"\n            onClick={this.clickTab}\n          >\n            Заблокированные\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"@material-ui/core\";\n\nconst textModal = {\n  block_user: {\n    title: \"Блокировка пользователя\",\n    action: \"заблокировать\",\n    btnText: \"Заблокировать\",\n  },\n  unblock_user: {\n    title: \"Разблокировка пользователя\",\n    action: \"разблокировать\",\n    btnText: \"Разблокировать\",\n  },\n  password_recovery: {\n    title: \"Восстановление пароля\",\n    action: \"восстановить пароль для\",\n    btnText: \"Восстановить\",\n  },\n  delete_account: {\n    title: \"Удаление лицевого счета\",\n    action: \"удалить лицевой счет\",\n    btnText: \"Удалить\",\n  },\n};\n\n///переделать на функциональный компонент!!!\nexport default class ConfirmModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      show = false,\n      type = \"\",\n      data,\n      text,\n      cancelHandler,\n      confirmHandler,\n    } = this.props;\n    const { title = \"\", action = \"\", btnText = \"\" } = textModal[type] || {};\n\n    const question = `Вы уверены, что хотите ${action} ${text}?`;\n    return (\n      <>\n        <Modal\n          className=\"confirm-modal\"\n          show={show}\n          onHide={cancelHandler}\n          centered\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>{title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{question}</Modal.Body>\n          <Modal.Footer>\n            <Button onClick={cancelHandler}>Отменить</Button>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className=\"confirm-modal__btn\"\n              onClick={() => {\n                cancelHandler();\n                confirmHandler(data);\n              }}\n            >\n              {btnText}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Modal,\n  Form,\n  Row,\n  Col,\n  ListGroup,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { IconButton, Icon, Tooltip, Button, Switch } from \"@material-ui/core\";\n\nimport ConfirmModal from \"./ConfirmModal\";\nimport {\n  EditOutlined,\n  CheckCircleOutlined,\n  CancelOutlined,\n} from \"@material-ui/icons\";\n\nimport \"./UserModal.scss\";\n\nexport default class UsersModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: { value: \"\" },\n      phone: { value: \"\" },\n      deleteAccountConfirmModal: { show: false, data: {}, text: \"\" },\n\n      isFormValid: false,\n      isFormSubmit: false,\n      errors: {\n        surname: \"\",\n        firstname: \"\",\n        patronymic: \"\",\n        birthday: \"\",\n        userName: \"\",\n        email: \"\",\n        phone: \"\",\n        account: \"\",\n      },\n      touched: {\n        surname: false,\n        firstname: false,\n        patronymic: false,\n        birthday: false,\n        userName: false,\n        email: false,\n        phone: false,\n        account: false,\n      },\n    };\n  }\n\n  setStateFromProps(props) {\n    console.log(\"setStateFromProps: \");\n    const { type = \"\", show } = props;\n    const {\n      oid = null,\n      surname = \"\",\n      firstname = \"\",\n      patronymic = \"\",\n      birthday = \"\",\n      accounts = [],\n      email = { value: \"\" },\n      phone = { value: \"\" },\n      active = null,\n      userName = \"\",\n      lastAuth = \"\",\n    } = props.data;\n\n    const accountInputShow = type === \"add\" ? true : false;\n\n    this.setState(\n      {\n        oid,\n        type,\n        surname,\n        firstname,\n        patronymic,\n        birthday,\n        account: \"\",\n        accounts,\n        email,\n        phone,\n        active,\n        userName,\n        lastAuth,\n        accountInputShow,\n        editAccount: {},\n\n        isFormValid: false,\n        isFormSubmit: false,\n        errors: {\n          surname: \"\",\n          firstname: \"\",\n          patronymic: \"\",\n          birthday: \"\",\n          userName: \"\",\n          email: \"\",\n          phone: \"\",\n          account: \"\",\n        },\n        touched: {\n          surname: false,\n          firstname: false,\n          patronymic: false,\n          birthday: false,\n          userName: false,\n          email: false,\n          phone: false,\n          account: false,\n        },\n      },\n      () => show && this.refs.surname.focus()\n    );\n  }\n\n  keyPressBind() {\n    console.log(\"handleKeyPressBind\");\n    this.refsArr = Object.keys(this.refs).map((ref) => this.refs[ref]); //массив ссылок\n\n    this.refsArr.forEach((ref) => {\n      ref.onkeypress = (event) => this.keyPress(event);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"componentWillReceiveProps\");\n    if (\n      this.props.data !== nextProps.data ||\n      this.props.type !== nextProps.type\n    ) {\n      this.setStateFromProps(nextProps);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"componentDidUpdate\");\n    this.keyPressBind();\n  }\n\n  keyPress(event) {\n    console.log(\"keyPressHandler: \");\n    const field = event.target;\n    if (event.keyCode === 13) {\n      if (field.tagName === \"BUTTON\") return;\n\n      if (field.tagName === \"INPUT\" && field.type === \"checkbox\") {\n        const account = this.state.accounts.find(\n          (account) => account.value === field.dataset.account\n        );\n        this.onChangePrivileged(account);\n        return;\n      }\n\n      event.preventDefault();\n\n      const sortRefsArr = this.refsArr.sort((a, b) => a.tabIndex - b.tabIndex); //сортировка ссылок по tabIndex в порядке возрастания\n      const nextIndex =\n        sortRefsArr.findIndex((element) => element === field) + 1;\n      const next = sortRefsArr[nextIndex]; //следующий элемент\n      next && next.focus();\n    }\n  }\n\n  deleteAccount = (deletedAccounts) => {\n    if (this.state?.editAccount?.value) {\n      this.hideInputAccount();\n    }\n\n    this.setState((prevState) => {\n      let accounts = [...prevState.accounts];\n      accounts = accounts.filter(\n        (account) => !deletedAccounts.includes(account)\n      );\n      return { accounts };\n    });\n  };\n\n  showDeleteAccountConfirmModal = (account) => {\n    const data = [account];\n    const { value = \"\", address = \"\" } = account;\n    const deleteAccountConfirmModal = {\n      show: true,\n      data,\n      text: `${value}${address && ` (${address})`}`,\n    };\n    this.setState({ deleteAccountConfirmModal });\n  };\n\n  closeDeleteAccountConfirmModal = () => {\n    const deleteAccountConfirmModal = {\n      show: false,\n      data: {},\n      text: \"\",\n    };\n    this.setState({ deleteAccountConfirmModal });\n  };\n\n  hideInputAccount = () => {\n    const { errors } = { ...this.state };\n    errors.account = \"\";\n    this.setState(\n      {\n        accountInputShow: false,\n        account: \"\",\n        editAccount: {},\n        errors,\n      },\n      () => this.refs[\"open-account-btn\"].focus()\n    );\n  };\n\n  showInputAccount = (account = {}) => {\n    const { value = \"\" } = account;\n    this.setState(\n      {\n        accountInputShow: true,\n        account: value,\n        editAccount: account,\n      },\n      () => this.refs.account.focus()\n    );\n    this.validateControl(\"account\", value);\n  };\n\n  saveAccount = () => {\n    const { account, editAccount } = this.state;\n    if (account) {\n      const address = `новый адрес для ${account}`; //запрос адреса и есть ли такой счет с номером лицевого account\n      const accounts = [...this.state.accounts];\n      if (editAccount.value) {\n        const editedAccount = accounts.find((item) => item === editAccount);\n        editedAccount.value = account;\n        editedAccount.address = address;\n      } else {\n        const privileged = false;\n        accounts.push({ value: account, address, privileged });\n      }\n      this.setState({ accounts });\n      this.hideInputAccount();\n    } else {\n      const { errors, touched } = { ...this.state };\n      errors.account = \"Введите лицевой счет\";\n      touched.account = true;\n      this.setState({ errors, touched });\n    }\n  };\n\n  onChange = (event) => {\n    const { name } = event.target;\n    let { value: newValue } = event.target;\n\n    if (newValue) {\n      if (name === \"surname\" || name === \"firstname\" || name === \"patronymic\") {\n        newValue = newValue.replace(/  /g, \" \").trimLeft();\n        newValue =\n          newValue.substring(0, 1).toUpperCase() + newValue.substring(1);\n      }\n      if (name === \"userName\") {\n        newValue = newValue.toLowerCase();\n      }\n      if (name === \"phone\") {\n        newValue = newValue.replace(/[^0-9+]/g, \"\"); // убираем все кроме цифр и +\n        newValue = newValue.replace(/^(\\+7 |\\+7|\\+|7|8)*/, \"\"); // убираем все +7, 7, 8 в начале строки (даже если повторяются, например 7+78)\n        newValue = newValue.replace(/\\D/, \"\"); //убираем все кроме цифр (т.е. +)\n        //newValue = newValue.substring(0, 10); // подстрока с начала 10 символов\n      }\n      if (name === \"email\") {\n        newValue = newValue.replace(/ /g, \"\");\n      }\n    }\n\n    const touched = { ...this.state.touched };\n    touched[name] = true;\n\n    if (name === \"phone\" || name === \"email\") {\n      this.setStateWithConfirmed(name, newValue);\n    } else {\n      this.setState({ [name]: newValue, touched });\n    }\n    this.validateControl(name, newValue);\n  };\n\n  setStateWithConfirmed = (name, newValue) => {\n    const prevValue = this.props.data[name]?.value;\n    const prevConfirmed = this.props.data[name]?.confirmed;\n    const touched = { ...this.state.touched };\n    touched[name] = true;\n    this.setState((prevState) => {\n      let { confirmed = false } = prevState[name];\n      if (prevValue === newValue && prevConfirmed) {\n        confirmed = true;\n      } else {\n        confirmed = false;\n      }\n      return { [name]: { value: newValue, confirmed }, touched };\n    });\n  };\n\n  onChangeEmail = (event) => {\n    console.log(\"onChangeEmail\");\n    const { name, value } = event.target;\n    const newValue = value.replace(/ /g, \"\");\n    this.setStateWithConfirmed(name, newValue);\n    this.validateControl(name, value);\n  };\n\n  onChangePhone = (event) => {\n    console.log(\"onChangePhone\");\n    const { name, value } = event.target;\n    let newValue = value.replace(/[^0-9+]/g, \"\"); // убираем все кроме цифр и +\n    newValue = newValue.replace(/^(\\+7 |\\+7|\\+|7|8)*/, \"\"); // убираем все +7, 7, 8 в начале строки (даже если повторяются, например 7+78)\n    newValue = newValue.replace(/\\D/, \"\"); //убираем все кроме цифр (т.е. +)\n    //newValue = newValue.substring(0, 10); // подстрока с начала 10 символов\n    this.setStateWithConfirmed(name, newValue);\n    this.validateControl(name, newValue);\n  };\n\n  onChangePrivileged = (account) => {\n    this.setState((prevState) => {\n      const accounts = [...prevState.accounts];\n      const editedAccount = accounts.find((item) => item === account);\n      editedAccount.privileged = !editedAccount.privileged;\n      return { accounts };\n    });\n  };\n\n  validateControl = (name, value) => {\n    const { errors } = { ...this.state };\n    errors[name] = \"\";\n    const regName = /[^- А-Яа-яЁё]/;\n    const regUserName = /[^A-Za-z0-9-_]/;\n    const regPhone = /^9\\d{9}$/;\n    const regEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    const regAccount = /\\D/;\n\n    if (name === \"surname\") {\n      if (!value) {\n        errors.surname = \"Фамилия не заполнена\";\n      } else if (regName.test(value)) {\n        errors.surname =\n          \"Фамилия должна содержать только кириллические буквы и символ -\";\n      }\n    }\n\n    if (name === \"firstname\") {\n      if (!value) {\n        errors.firstname = \"Имя не заполнено\";\n      } else if (regName.test(value)) {\n        errors.firstname =\n          \"Имя должно содержать только кириллические буквы и символ -\";\n      }\n    }\n\n    if (name === \"patronymic\" && value && regName.test(value)) {\n      errors.patronymic =\n        \"Отчество должно содержать только кириллические буквы и символ -\";\n    }\n\n    if (name === \"birthday\" && value) {\n      const datePast = new Date();\n      const birthDate = new Date(value);\n      datePast.setFullYear(new Date().getFullYear() - 150);\n      if (birthDate > new Date() || datePast > birthDate) {\n        errors.birthday = \"Некорректная дата рождения\";\n      }\n    }\n\n    if (name === \"userName\" && value && regUserName.test(value)) {\n      errors.userName =\n        \"Имя пользователя должно содержать только латинские буквы, цифры, символы - и _\";\n    }\n\n    if (name === \"phone\") {\n      const { email } = this.state;\n      if (!value && !email?.value) {\n        errors.phone = \"Необходимо заполнить email или телефон\";\n      } else {\n        if (value && !regPhone.test(value)) {\n          errors.phone = \"Телефон должен быть в формате +7 9xxxxxxxxx\";\n        }\n        if (value && !email?.value) {\n          errors.email = \"\";\n        }\n      }\n    }\n\n    if (name === \"email\") {\n      const { phone } = this.state;\n      if (!value && !phone?.value) {\n        errors.email = \"Необходимо заполнить email или телефон\";\n      } else {\n        if (value && !regEmail.test(value)) {\n          errors.email = \"Некорректный Email\";\n        }\n        if (value && !phone?.value) {\n          errors.phone = \"\";\n        }\n      }\n    }\n\n    if (name === \"account\" && value) {\n      if (regAccount.test(value)) {\n        errors.account = \"Лицевой должен содержать только цифры\";\n      } else if (value.length < 6 || value.length > 8) {\n        errors.account = \"Лицевой счет должен содержать от 6 до 8 цифр\";\n      }\n    }\n\n    const isFormValid = Object.keys(errors).every(\n      (name) => !errors[name] || name === \"account\"\n    );\n\n    this.setState({ errors, isFormValid });\n    return isFormValid;\n  };\n\n  validateForm = () => {\n    let isFormValid;\n\n    this.refsArr.forEach((field) => {\n      if (field.tagName === \"INPUT\") {\n        const { name, value } = field;\n        isFormValid = this.validateControl(name, value);\n      }\n    });\n\n    this.setState({ isFormSubmit: true });\n    return isFormValid;\n  };\n\n  renderAccount = (account, index) => {\n    return (\n      <ListGroup.Item\n        className={`accounts-list__item ${\n          account?.address\n            ? \"accounts-list__item--active\"\n            : \"accounts-list__item--closed\"\n        }`}\n        key={index}\n      >\n        <div className=\"accounts-list__content\">\n          <div className=\"accounts-list__title\">{account.value}</div>\n          <div className=\"accounts-list__text\">{account.address}</div>\n          <div className=\"accounts-list__text\">{account.email}</div>\n        </div>\n        <div className=\"accounts-list__controls\">\n          <Tooltip title={account.privileged ? \"Привелигерованный\" : \"Базовый\"}>\n            <span>\n              <Switch\n                checked={account.privileged}\n                onChange={() => this.onChangePrivileged(account)}\n                color=\"primary\"\n                size=\"small\"\n                name={`privileged${index}`}\n                ref={`privileged${index}`}\n                tabIndex={`${11 + index * 3 + 1}`}\n                inputProps={{\n                  \"aria-label\": \"primary checkbox\",\n                  \"data-account\": account.value,\n                }}\n              />\n            </span>\n          </Tooltip>\n          <IconButton\n            className=\"user-modal__btn accounts-list__btn \"\n            onClick={(event) => {\n              console.log(\"Редактирование лицевого\");\n\n              this.showInputAccount(account);\n            }}\n            name={`edit-account-btn${index}`}\n            ref={`edit-account-btn${index}`}\n            tabIndex={`${11 + index * 3 + 2}`}\n          >\n            <Tooltip title=\"Редактировать\">\n              <Icon\n                className=\"user-modal__btn-icon accounts-list__btn-icon\"\n                color=\"primary\"\n                component={EditOutlined}\n              />\n            </Tooltip>\n          </IconButton>\n          <IconButton\n            className=\"user-modal__btn accounts-list__btn\"\n            onClick={() => this.showDeleteAccountConfirmModal(account)}\n            name={`delete-account-btn${index}`}\n            ref={`delete-account-btn${index}`}\n            tabIndex={`${11 + index * 3 + 3}`}\n          >\n            <Tooltip title=\"Удалить\">\n              <Icon\n                className=\"user-modal__btn-icon accounts-list__btn-icon\"\n                color=\"primary\"\n              >\n                delete_outline\n              </Icon>\n            </Tooltip>\n          </IconButton>\n        </div>\n      </ListGroup.Item>\n    );\n  };\n\n  renderAccounts = (accounts) => {\n    return (\n      <ListGroup horizontal className=\"accounts-list\">\n        {accounts.map((account, index) => this.renderAccount(account, index))}\n      </ListGroup>\n    );\n  };\n\n  render() {\n    const { show, closeModalHandler, saveUserHandler } = this.props;\n    const {\n      type,\n      surname,\n      firstname,\n      patronymic,\n      birthday,\n      accounts,\n      account,\n      email,\n      phone,\n      userName,\n      accountInputShow,\n      deleteAccountConfirmModal,\n      errors,\n      touched,\n      isFormValid,\n      isFormSubmit,\n    } = this.state;\n    const title =\n      type === \"add\"\n        ? \"Добавление пользователя\"\n        : type === \"edit\"\n        ? \"Редактирование пользователя\"\n        : \"\";\n    return (\n      <>\n        {!deleteAccountConfirmModal?.show && (\n          <Modal\n            className=\"user-modal\"\n            show={show}\n            onHide={closeModalHandler}\n            size=\"lg\"\n            centered\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form\n                /* onSubmit={formik.handleSubmit} */ className=\"user-form\"\n                autoComplete=\"off\"\n              >\n                <Form.Group as={Row} /* className=\"user-form__row\" */>\n                  <Form.Label column sm={2}>\n                    Фамилия\n                  </Form.Label>\n                  <Col sm={10}>\n                    <Form.Control\n                      type=\"text\"\n                      className={\n                        errors.surname && (touched.surname || isFormSubmit)\n                          ? \"invalid\"\n                          : \"\"\n                      }\n                      placeholder=\"Введите фамилию\"\n                      value={surname}\n                      name={\"surname\"}\n                      onChange={this.onChange}\n                      ref=\"surname\"\n                      tabIndex=\"1\"\n                    />\n                    {errors.surname && (touched.surname || isFormSubmit) && (\n                      <div className=\"error-message\">{errors.surname}</div>\n                    )}\n                  </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                  <Form.Label column sm={2}>\n                    Имя\n                  </Form.Label>\n                  <Col sm={10}>\n                    <Form.Control\n                      type=\"text\"\n                      className={\n                        errors.firstname && (touched.firstname || isFormSubmit)\n                          ? \"invalid\"\n                          : \"\"\n                      }\n                      placeholder=\"Введите имя\"\n                      value={firstname}\n                      name={\"firstname\"}\n                      onChange={this.onChange}\n                      ref=\"firstname\"\n                      tabIndex=\"2\"\n                    />\n                    {errors.firstname &&\n                      (touched.firstname || isFormSubmit) && (\n                        <div className=\"error-message\">{errors.firstname}</div>\n                      )}\n                  </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                  <Form.Label column sm={2}>\n                    Отчество\n                  </Form.Label>\n                  <Col sm={10}>\n                    <Form.Control\n                      type=\"text\"\n                      className={\n                        errors.patronymic &&\n                        (touched.patronymic || isFormSubmit)\n                          ? \"invalid\"\n                          : \"\"\n                      }\n                      placeholder=\"Введите отчество\"\n                      value={patronymic}\n                      name={\"patronymic\"}\n                      onChange={this.onChange}\n                      ref=\"patronymic\"\n                      tabIndex=\"3\"\n                    />\n                    {errors.patronymic &&\n                      (touched.patronymic || isFormSubmit) && (\n                        <div className=\"error-message\">{errors.patronymic}</div>\n                      )}\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row}>\n                  <Form.Label column sm={2}>\n                    Дата рождения\n                  </Form.Label>\n                  <Col sm={10}>\n                    <Form.Control\n                      type=\"date\"\n                      className={\n                        errors.birthday && (touched.birthday || isFormSubmit)\n                          ? \"invalid\"\n                          : \"\"\n                      }\n                      placeholder=\"Введите дату рождения\"\n                      name={\"birthday\"}\n                      value={birthday}\n                      onChange={this.onChange}\n                      ref=\"birthday\"\n                      tabIndex=\"4\"\n                    />\n                    {errors.birthday && (touched.birthday || isFormSubmit) && (\n                      <div className=\"error-message\">{errors.birthday}</div>\n                    )}\n                  </Col>\n                </Form.Group>\n\n                {type === \"edit\" && (\n                  <Form.Group as={Row}>\n                    <Form.Label column sm={2}>\n                      Имя пользователя\n                    </Form.Label>\n                    <Col sm={10}>\n                      <Form.Control\n                        type=\"text\"\n                        className={\n                          errors.userName && (touched.userName || isFormSubmit)\n                            ? \"invalid\"\n                            : \"\"\n                        }\n                        placeholder=\"Введите логин\"\n                        value={userName}\n                        name={\"userName\"}\n                        onChange={this.onChange}\n                        ref=\"userName\"\n                        tabIndex=\"5\"\n                      />\n                      {errors.userName &&\n                        (touched.userName || isFormSubmit) && (\n                          <div className=\"error-message\">{errors.userName}</div>\n                        )}\n                    </Col>\n                  </Form.Group>\n                )}\n\n                <Form.Group as={Row}>\n                  <Form.Label column sm={2}>\n                    Email\n                  </Form.Label>\n                  <Col sm={10}>\n                    <InputGroup className=\"\">\n                      <FormControl\n                        /*  type=\"email\" */\n                        type=\"text\"\n                        className={\n                          errors.email && (touched.email || isFormSubmit)\n                            ? \"invalid\"\n                            : \"\"\n                        }\n                        placeholder=\"Введите email\"\n                        name={\"email\"}\n                        value={email.value}\n                        onChange={this.onChange}\n                        ref=\"email\"\n                        tabIndex=\"6\"\n                      />\n                      {type === \"edit\" && (\n                        <InputGroup.Append>\n                          <InputGroup.Text>\n                            {email?.confirmed ? (\n                              <Tooltip title=\"Подтвержденный\">\n                                <Icon\n                                  color=\"primary\"\n                                  component={CheckCircleOutlined}\n                                />\n                              </Tooltip>\n                            ) : (\n                              <Tooltip title=\"Неподтвержденный\">\n                                <Icon\n                                  color=\"primary\"\n                                  component={CancelOutlined}\n                                />\n                              </Tooltip>\n                            )}\n                          </InputGroup.Text>\n                        </InputGroup.Append>\n                      )}\n                    </InputGroup>\n                    {errors.email && (touched.email || isFormSubmit) && (\n                      <div className=\"error-message\">{errors.email}</div>\n                    )}\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row}>\n                  <Form.Label column sm={2}>\n                    Телефон\n                  </Form.Label>\n                  <Col sm={10}>\n                    <InputGroup className=\"\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>+7</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        type=\"tel\"\n                        className={\n                          errors.phone && (touched.phone || isFormSubmit)\n                            ? \"invalid\"\n                            : \"\"\n                        }\n                        placeholder=\"Введите телефон\"\n                        name={\"phone\"}\n                        value={phone.value}\n                        onChange={this.onChange}\n                        ref=\"phone\"\n                        tabIndex=\"7\"\n                      />\n                      {type === \"edit\" && (\n                        <InputGroup.Append>\n                          <InputGroup.Text>\n                            {phone?.confirmed ? (\n                              <Tooltip title=\"Подтвержденный\">\n                                <Icon\n                                  color=\"primary\"\n                                  component={CheckCircleOutlined}\n                                />\n                              </Tooltip>\n                            ) : (\n                              <Tooltip title=\"Неподтвержденный\">\n                                <Icon\n                                  color=\"primary\"\n                                  component={CancelOutlined}\n                                />\n                              </Tooltip>\n                            )}\n                          </InputGroup.Text>\n                        </InputGroup.Append>\n                      )}\n                    </InputGroup>\n                    {errors.phone && (touched.phone || isFormSubmit) && (\n                      <div className=\"error-message\">{errors.phone}</div>\n                    )}\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row}>\n                  <Form.Label column sm={2}>\n                    Лицевые счета\n                  </Form.Label>\n\n                  {accountInputShow ? (\n                    <Col\n                      sm={10}\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                      }}\n                    >\n                      <div className=\"form-group__field\">\n                        <Form.Control\n                          type=\"text\"\n                          inputMode=\"numeric\"\n                          className={\n                            errors.account && (touched.account || isFormSubmit)\n                              ? \"invalid\"\n                              : \"\"\n                          }\n                          placeholder=\"Введите лицевой счет\"\n                          name={\"account\"}\n                          value={account}\n                          onChange={this.onChange}\n                          ref=\"account\"\n                          tabIndex=\"9\"\n                        />\n                        <div className=\"form-group__controls\">\n                          <IconButton\n                            className=\"user-modal__btn\"\n                            onClick={this.saveAccount}\n                            name=\"save-account-btn\"\n                            ref=\"save-account-btn\"\n                            tabIndex=\"10\"\n                          >\n                            <Tooltip title=\"Сохранить\">\n                              <Icon\n                                className=\"user-modal__btn-icon\"\n                                color=\"primary\"\n                              >\n                                done\n                              </Icon>\n                            </Tooltip>\n                          </IconButton>\n\n                          <IconButton\n                            className=\"user-modal__btn\"\n                            onClick={(event) => {\n                              console.log(\"Отмена добавления лицевого\");\n                              this.hideInputAccount();\n                            }}\n                            name=\"close-account-btn\"\n                            ref=\"close-account-btn\"\n                            tabIndex=\"11\"\n                          >\n                            <Tooltip title=\"Отменить\">\n                              <Icon\n                                className=\"user-modal__btn-icon\"\n                                color=\"primary\"\n                              >\n                                clear\n                              </Icon>\n                            </Tooltip>\n                          </IconButton>\n                        </div>\n                      </div>\n                      {errors.account && (touched.account || isFormSubmit) && (\n                        <div className=\"error-message\">{errors.account}</div>\n                      )}\n                    </Col>\n                  ) : (\n                    <Col\n                      sm={10}\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <IconButton\n                        className=\"user-modal__btn\"\n                        onClick={(event) => {\n                          console.log(\"Добавление лицевого\");\n                          this.showInputAccount();\n                        }}\n                        name=\"open-account-btn\"\n                        ref=\"open-account-btn\"\n                        tabIndex=\"8\"\n                      >\n                        <Tooltip title=\"Добавить\">\n                          <Icon\n                            className=\"user-modal__btn-icon\"\n                            color=\"primary\"\n                          >\n                            add_circle_outline\n                          </Icon>\n                        </Tooltip>\n                      </IconButton>\n                    </Col>\n                  )}\n                  {/* </Col> */}\n                  <Col sm={12}>{accounts && this.renderAccounts(accounts)}</Col>\n                </Form.Group>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              {/* <Button variant=\"secondary\" onClick={this.handleClose}>\n                Закрыть\n              </Button> */}\n              <Button onClick={closeModalHandler}>Отменить</Button>\n              <Button\n                /* type=\"submit\" */\n                color=\"primary\"\n                variant=\"contained\"\n                className=\"user-modal__btn\"\n                onClick={() => {\n                  const formValid = this.validateForm();\n                  console.log(\"formValid: \", formValid);\n                  if (formValid) {\n                    closeModalHandler();\n                    saveUserHandler(this.state);\n                  }\n                }}\n                name=\"save-user-btn\"\n                ref=\"save-user-btn\"\n                tabIndex={`${11 + (accounts?.length * 3 || 0) + 1}`}\n              >\n                Сохранить\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        )}\n        {deleteAccountConfirmModal && (\n          <ConfirmModal\n            show={deleteAccountConfirmModal.show}\n            type=\"delete_account\"\n            data={deleteAccountConfirmModal.data}\n            text={deleteAccountConfirmModal.text}\n            cancelHandler={this.closeDeleteAccountConfirmModal}\n            confirmHandler={this.deleteAccount}\n          />\n        )}\n      </>\n    );\n  }\n}\n","const users = [\n  {\n    oid: \"534\",\n    accounts: [\n      {\n        value: \"3570881\",\n        address: \"г Тюмень, ул Республики, д 123, кв 77\",\n        email: \"test@mail.ru\",\n        privileged: false,\n        /* active: false, */\n      },\n      {\n        value: \"3570822\",\n        address: \"г Тюмень, ул Ленина, д 23, кв 45\",\n        /* active: true, */\n        email: \"test@mail.ru\",\n        privileged: true,\n      },\n    ],\n    surname: \"Иванов\",\n    firstname: \"Иван\",\n    patronymic: \"Иванович\",\n    birthday: \"1976-03-01\",\n    userType: 1,\n    active: true,\n    userName: \"user\",\n    /* email: \"test@mail.ru\",\n    phone: \"9058880303\", */\n\n    email: {\n      value: \"test@mail.ru\",\n      confirmed: false,\n    },\n    phone: {\n      value: \"9058880303\",\n      confirmed: false,\n    },\n\n    lastAuth: {\n      device: \"mobile\",\n      date: \"2019-12-12T13:54\",\n    },\n    state: 63,\n  },\n  {\n    oid: \"264\",\n    accounts: [\n      {\n        value: \"3574870\",\n        /* active: true, */\n        address: \"г Тюмень, ул Ленина, д 23, кв 45\",\n        email: \"test@mail.ru\",\n        privileged: false,\n      },\n      { value: \"3574888\" /* active: false  */ },\n      {\n        value: \"3574889\",\n        /* active: true, */\n        address: \"г Тюмень, ул Республики, д 165, кв 89\",\n        email: \"test@mail.ru\",\n        privileged: false,\n      },\n      {\n        value: \"3574887\",\n        /* active: true, */\n        address: \"г Тобольск, ул Ленина, д 17, кв 5\",\n      },\n      {\n        value: \"3574886\",\n        /*  active: true, */\n        address: \"г Тюмень, ул Уральская, д 16, кв 23\",\n        email: \"test@mail.ru\",\n        privileged: true,\n      },\n    ],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    birthday: \"1956-12-21T13:54\",\n    userType: 1,\n    active: false,\n    userName: \"userok\",\n    /* email: \"test@yandex.ru\",\n    phone: \"9125640404\", */\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: true,\n    },\n    phone: {\n      value: \"9125640404\",\n      confirmed: true,\n    },\n    lastAuth: {\n      device: \"desktop\",\n      date: \"2019-12-21T20:54\",\n    },\n    state: 34,\n  },\n  {\n    oid: \"555\",\n    accounts: [{ value: \"3070802\" /*  active: true */ }],\n    surname: \"Голяк\",\n    firstname: \"Игорь\",\n    patronymic: \"Сергеевич\",\n    userType: 2,\n    active: false,\n    /* userName: \"hz\", */\n    /* email: \"test@yandex.ru\", */\n    /* phone: \"9125640404\", */\n    lastAuth: {\n      device: \"desktop\",\n      date: \"2020-05-29T12:30\",\n    },\n    state: 63,\n  },\n  {\n    oid: \"666\",\n    accounts: [{ value: \"3500870\" }],\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: false,\n    userName: \"user666\",\n    /* email: \"test@yandex.ru\",\n    phone: \"9125640404\", */\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: true,\n    },\n    phone: {\n      value: \"9125640404\",\n      confirmed: true,\n    },\n    lastAuth: {\n      device: \"mobile\",\n      date: \"2020-07-02T12:30\",\n    },\n    state: 34,\n  },\n  {\n    oid: \"777\",\n    accounts: [{ value: \"3570871\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 1,\n    active: true,\n    userName: \"user777\",\n    /* email: \"test@yandex.ru\", */\n    phone: {\n      value: \"9125640404\",\n      confirmed: true,\n    },\n    /* phone: \"9125640404\", */\n    lastAuth: {\n      device: \"mobile\",\n      date: \"2020-07-02T12:30\",\n    },\n    state: 34,\n  },\n  {\n    oid: \"999\",\n    accounts: [{ value: \"3570875\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: true,\n    userName: \"user999\",\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: false,\n    },\n    /* phone: \"9125640404\", */\n    lastAuth: {\n      device: \"mobile\",\n      date: \"2020-03-15T12:30\",\n    },\n    state: 34,\n  },\n  {\n    oid: \"888\",\n    accounts: [{ value: \"3570877\" }],\n    userType: 1,\n    active: false,\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userName: \"user888\",\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: false,\n    },\n    phone: {\n      value: \"9125640404\",\n      confirmed: false,\n    },\n    lastAuth: {\n      device: \"mobile\",\n      /* date: \"2020-08-08T12:30\", */\n    },\n    state: 63,\n  },\n  {\n    oid: \"111\",\n    accounts: [{ value: \"35720874\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: true,\n    userName: \"user111\",\n    email: \"test@yandex.ru\",\n    phone: \"9125640404\",\n    lastAuth: {\n      device: \"mobile\",\n      date: \"2020-07-14T12:30\",\n    },\n    state: 63,\n  },\n  {\n    oid: \"112\",\n    accounts: [{ value: \"35760874\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: true,\n    userName: \"user112\",\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: false,\n    },\n    phone: {\n      value: \"9125640404\",\n      confirmed: false,\n    },\n    lastAuth: {\n      device: \"desktop\",\n      date: \"2020-07-02T12:45\",\n    },\n    state: 63,\n  },\n  {\n    oid: \"113\",\n    accounts: [{ value: \"35730874\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: true,\n    userName: \"user113\",\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: false,\n    },\n    phone: {\n      value: \"9125640404\",\n      confirmed: false,\n    },\n    lastAuth: {\n      /* device: \"desktop\", */\n      date: \"2020-08-18T12:30\",\n    },\n    state: 63,\n  },\n  {\n    oid: \"114\",\n    accounts: [{ value: \"30570874\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: true,\n    userName: \"user114\",\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: false,\n    },\n    phone: {\n      value: \"9125640404\",\n      confirmed: false,\n    },\n    lastAuth: {\n      device: \"desktop\",\n      date: \"2020-08-16T15:30\",\n    },\n    state: 63,\n  },\n  {\n    oid: \"115\",\n    accounts: [{ value: \"3170874\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: true,\n    userName: \"user115\",\n    phone: {\n      value: \"9125640404\",\n      confirmed: false,\n    },\n    /* lastAuth: {\n      device: \"desktop\",\n      date: \"2020-08-17T14:30\",\n    }, */\n    state: 63,\n  },\n  {\n    oid: \"116\",\n    accounts: [{ value: \"39570874\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: true,\n    userName: \"user116\",\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: false,\n    },\n    phone: {\n      value: \"9125640404\",\n      confirmed: false,\n    },\n    lastAuth: {\n      device: \"desktop\",\n      date: \"2020-08-22T18:30\",\n    },\n    state: 63,\n  },\n  {\n    oid: \"117\",\n    accounts: [{ value: \"38570874\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: true,\n    userName: \"user117\",\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: false,\n    },\n    phone: {\n      value: \"9125640404\",\n      confirmed: false,\n    },\n    lastAuth: {\n      device: \"desktop\",\n      date: \"2020-08-23T18:30\",\n    },\n    state: 63,\n  },\n  {\n    oid: \"118\",\n    accounts: [{ value: \"35570874\" }],\n    surname: \"Кузнецов\",\n    firstname: \"Евгений\",\n    patronymic: \"Петрович\",\n    userType: 2,\n    active: true,\n    userName: \"user118\",\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: false,\n    },\n    lastAuth: {\n      device: \"desktop\",\n      date: \"2020-08-24T12:30\",\n    },\n    state: 63,\n  },\n  {\n    oid: \"119\",\n    accounts: [{ value: \"3570874\" }],\n    surname: \"Кузнецова\",\n    firstname: \"Лариса\",\n    patronymic: \"Евгеньевна\",\n    userType: 2,\n    active: true,\n    userName: \"user119\",\n    email: {\n      value: \"test@yandex.ru\",\n      confirmed: false,\n    },\n    phone: {\n      value: \"9125640404\",\n      confirmed: false,\n    },\n    lastAuth: {\n      device: \"desktop\",\n      date: \"2020-08-24T12:30\",\n    },\n    state: 63,\n  },\n];\n\nexport default users;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"./UserGrid.scss\";\nimport MaterialTable, {\n  MTableToolbar,\n  MTablePagination,\n  MTableActions,\n  MTableAction,\n  MTableBodyRow,\n} from \"material-table\";\n\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  LockOpen,\n  LockOutlined,\n  VisibilityOutlined,\n  VpnKeyOutlined,\n  VpnKey,\n  CheckCircleOutlined,\n  EditOutlined,\n  CancelOutlined,\n  PhoneIphone,\n  Computer,\n} from \"@material-ui/icons\";\n\nimport { Icon, Tooltip } from \"@material-ui/core\";\n\nimport { Toast } from \"react-bootstrap\";\n\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\nimport \"moment/locale/ru\";\n\nimport CustomToolbar from \"./CustomToolbar\";\nimport UsersModal from \"./UserModal\";\nimport ConfirmModal from \"./ConfirmModal\";\n\nimport users from \"./users\";\n\nconst sendRequest = async (method, url, data) => {\n  try {\n    const response = await axios({\n      method,\n      url,\n      responseType: \"json\",\n      data,\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/* const getAccount = async (data) => {\n  const method = \"get\";\n  const url = \"http://jsonplaceholder.typicode.com/posts\";\n  console.log(\"data: \", data);\n  this.setState({ loader: true });\n  const response = await sendRequest(method, url, data);\n  this.setState({ loader: false });\n  return response ? response : [];\n};\n\nconst getDaData = async (queryValue) => {\n  console.log(\"getDaData\");\n  let query = {\n    query: queryValue,\n    count: 20,\n    locations: [\n      {\n        region: \"Тюменская\",\n      },\n    ],\n    locations_boost: [{ kladr_id: \"72000001000028400\" }],\n    restrict_value: true,\n  };\n\n  const method = \"post\";\n  const url =\n    \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address\";\n  try {\n    this.responseAddress = await axios({\n      method,\n      url,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: \"Token \" + token,\n      },\n      mode: \"cors\",\n      data: query,\n    });\n    const suggestions = this.responseAddress.data.suggestions.map(\n      (item, index) => ({ ...item, id: item.data.house ? index : null })\n    );\n    return suggestions;\n  } catch (error) {\n    console.log(error);\n  }\n}; */\n\nconst declension = (n, { nominative, genitive_singular, genitive_plural }) => {\n  return n % 10 === 1 && n % 100 !== 11\n    ? nominative\n    : [2, 3, 4].includes(n % 10) && ![12, 13, 14].includes(n % 100)\n    ? genitive_singular\n    : genitive_plural;\n};\n\nconst userNominative = (n) => {\n  const nominative = \"пользователь\";\n  const genitive_singular = \"пользователя\";\n  const genitive_plural = \"пользователей\";\n  return declension(n, { nominative, genitive_singular, genitive_plural });\n};\n\nconst userGenitive = (n) => {\n  const nominative = \"пользователя\";\n  const genitive_singular = \"пользователей\";\n  const genitive_plural = \"пользователей\";\n  return declension(n, { nominative, genitive_singular, genitive_plural });\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#4c43a1\",\n    },\n    secondary: {\n      main: \"#4c43a1\",\n    },\n  },\n});\n\nexport default class UsersGrid extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.materialTableRef = React.createRef();\n\n    this.state = {\n      activeTab: \"all\",\n      blockUserConfirmModal: { show: false, data: {}, text: \"\" },\n      unblockUserConfirmModal: { show: false, data: {}, text: \"\" },\n      passwordRecoveryConfirmModal: { show: false, data: {}, text: \"\" },\n      userModal: {\n        show: false,\n        type: \"\",\n        data: {},\n      },\n      message: {\n        show: false,\n        text: \"\",\n      },\n      columns: [\n        {\n          title: \"ЛС\",\n          field: \"accounts\",\n          /* customFilterAndSearch: (value, data, column) => {\n            console.log(column);\n            return data.accounts === \"3574870\";\n          }, */\n          render: (rowData) => {\n            return (\n              <>\n                {rowData.accounts.slice(0, 3).map((account, index) => (\n                  <div key={index} className=\"text-with-icon\">\n                    <div className=\"icon\">\n                      {account?.privileged ? (\n                        <Tooltip title=\"Привелигерованный\">\n                          <Icon\n                            color=\"primary\"\n                            component={CheckCircleOutlined}\n                          />\n                        </Tooltip>\n                      ) : (\n                        <Tooltip title=\"Базовый\">\n                          <Icon color=\"primary\" component={CancelOutlined} />\n                        </Tooltip>\n                      )}\n                    </div>\n                    <div className=\"text\">\n                      {account.value}\n                      {(index === rowData.accounts.length - 1 || index === 2) &&\n                        rowData.accounts.length > 3 &&\n                        \"...\"}\n                    </div>\n                  </div>\n                ))}\n                {/* { if (rowData.accounts.length > 3)   <>...</>} */}\n              </>\n            );\n            /* .join(\", \"); */\n          },\n        },\n        {\n          title: \"ФИО\",\n          field: \"surname\",\n          render: ({ surname = \"\", firstname = \"\", patronymic = \"\" }) =>\n            `${surname} ${firstname} ${patronymic}`,\n          /* validate: (rowData) =>\n            rowData.name.length < 3 ? \"Введите больше трех символов\" : \"\", */\n          /* validate: (rowData) =>\n            rowData.name === \"\"\n              ? { isValid: false, helperText: \"Имя не может быть пустым\" }\n              : true, */\n        },\n\n        {\n          title: \"Email\",\n          field: \"email\",\n          render: ({ email }) => (\n            <div className=\"text-with-icon\">\n              {email?.value && (\n                <>\n                  <div className=\"icon\">\n                    {email?.confirmed ? (\n                      <Tooltip title=\"Подтвержденный\">\n                        <Icon color=\"primary\" component={CheckCircleOutlined} />\n                      </Tooltip>\n                    ) : (\n                      <Tooltip title=\"Неподтвержденный\">\n                        <Icon color=\"primary\" component={CancelOutlined} />\n                      </Tooltip>\n                    )}\n                  </div>\n                  <div className=\"text\">{email?.value}</div>\n                </>\n              )}\n            </div>\n          ),\n        },\n        {\n          title: \"Телефон\",\n          field: \"phone\",\n          render: ({ phone }) => (\n            <div className=\"text-with-icon\">\n              {phone?.value && (\n                <>\n                  <div className=\"icon\">\n                    {phone?.confirmed ? (\n                      <Tooltip title=\"Подтвержденный\">\n                        <Icon color=\"primary\" component={CheckCircleOutlined} />\n                      </Tooltip>\n                    ) : (\n                      <Tooltip title=\"Неподтвержденный\">\n                        <Icon color=\"primary\" component={CancelOutlined} />\n                      </Tooltip>\n                    )}\n                  </div>\n                  <div className=\"text\">{`+7 ${phone.value}`}</div>\n                </>\n              )}\n            </div>\n          ),\n        },\n\n        { title: \"Имя пользователя\", field: \"userName\" },\n        /* {\n          title: \"Уч. запись\",\n          field: \"userType\",\n          lookup: { 1: \"lk.itpc.ru\", 2: \"old-lk.itpc.ru\" },\n        }, */\n        /* {\n          title: \"Активность\",\n          field: \"active\",\n          lookup: { 1: \"Активный\", 2: \"Заблокирован\" },\n        }, */\n        /* {\n          title: \"Статус\",\n          field: \"state\",\n          lookup: { 34: \"Базовый\", 63: \"Привилегированный\" },\n          render: (rowData) =>\n            (rowData.state === 34 && (\n              <Tooltip title=\"Базовый\">\n                <Icon color=\"primary\" component={CancelOutlined} />\n              </Tooltip>\n            )) ||\n            (rowData.state === 63 && (\n              <Tooltip title=\"Привилегированный\">\n                <Icon color=\"primary\" component={CheckCircleOutlined} />\n              </Tooltip>\n            )),\n          /* {\n            return (\n              <div\n              >\n                {rowData.state === 34 ? (\n                  <Icon color=\"primary\" component={CancelOutlinedIcon} />\n                ) : (\n                  <Icon color=\"primary\" component={CheckCircleOutlinedIcon} />\n                )}\n              </div>\n            );\n          }, */\n        /* searchable: false, \n        }, */\n        {\n          title: \"Вход\",\n          field: \"lastAuth\",\n          render: ({ lastAuth }) => {\n            /* const lastAuthDate = new Date(lastAuth.date); */\n            return (\n              lastAuth && (\n                <>\n                  {lastAuth?.device && (\n                    <div>\n                      {lastAuth?.device === \"mobile\" ? (\n                        <Tooltip title=\"Мобильное приложение\">\n                          <Icon color=\"primary\" component={PhoneIphone} />\n                        </Tooltip>\n                      ) : (\n                        <Tooltip title=\"Web-версия\">\n                          <Icon color=\"primary\" component={Computer} />\n                        </Tooltip>\n                      )}\n                    </div>\n                  )}\n                  {lastAuth?.date && (\n                    <Tooltip\n                      title={\n                        <Moment format=\"DD.MM.YY HH:mm\">{lastAuth.date}</Moment>\n                      }\n                    >\n                      <div>\n                        <Moment fromNow>{lastAuth.date}</Moment>\n                        {/* {moment().format(\"DD.MM.YY\"); lastAuth.date} */}\n                      </div>\n                    </Tooltip>\n                  )}\n                </>\n              )\n            );\n\n            /* return `${lastAuth.date} ${\n              lastAuth.device === \"mobile\" ? (\n                <Icon color=\"primary\" component={PhoneIphone} />\n              ) : (\n                <Icon color=\"primary\" component={Computer} />\n              )\n            } `; */\n          },\n        },\n        /* {\n          title: \"\",\n          render: (rowData) => {\n            return (\n              <>\n                {rowData.active === 1 ? (\n                  <Tooltip title=\"Заблокировать\">\n                    <IconButton\n                      onClick={(event) => {\n                        console.log(\"IconButton: \", rowData);\n                        // запрос на блокировку пользователя rowData.id\n                      }}\n                    >\n                      <Icon color=\"primary\" component={LockOpen} />\n                    </IconButton>\n                  </Tooltip>\n                ) : (\n                  <Tooltip title=\"Разблокировать\">\n                    <IconButton\n                      onClick={(event) => {\n                        console.log(\"IconButton: \", rowData);\n                        // запрос на разблокировку пользователя rowData.id\n                      }}\n                    >\n                      <Icon color=\"primary\" component={LockOutlined} />\n                    </IconButton>\n                  </Tooltip>\n                )}\n              </>\n            );\n          },\n          // searchable: false, \n        }, */\n      ],\n      data: [],\n    };\n  }\n\n  searchUsers = (searchText) => {\n    console.log(\"searchUsers\");\n    console.log(\"searchText: \", searchText);\n    //const data = {};\n    // ЗАПРОС поиска к API, результат в data\n    // лоадер\n    /* searchText &&  */ this.setState({ data: users });\n  };\n\n  filterUsers = (activeTab) => {\n    const data = this.state.data;\n    switch (activeTab) {\n      case \"all\": {\n        return data;\n        break;\n      }\n      case \"active\": {\n        return data.filter((user) => user.active);\n        break;\n      }\n      case \"blocked\": {\n        return data.filter((user) => !user.active);\n        break;\n      }\n    }\n  };\n\n  setActiveTab = (activeTab) => {\n    console.log(\"activeTab: \", activeTab);\n    this.setState({ activeTab });\n  };\n\n  showMessage = (text = \"\") => {\n    const message = { show: true, text };\n    this.setState({ message });\n  };\n\n  hideMessage = () => {\n    const message = { show: false, text: \"\" };\n    this.setState({ message });\n  };\n\n  loginUser = (rowData) => {\n    console.log(\"Вход от \" + rowData.surname);\n    // ЗАПРОС входа от пользователя\n  };\n\n  showBlockUserConfirmModal = (data = {}, text = \"\") => {\n    const blockUserConfirmModal = { show: true, data, text };\n    this.setState({ blockUserConfirmModal });\n  };\n\n  closeBlockUserConfirmModal = () => {\n    const blockUserConfirmModal = { show: false, data: {}, text: \"\" };\n    this.setState({ blockUserConfirmModal });\n  };\n\n  blockUser = ({ oid, surname = \"\", firstname = \"\", patronymic = \"\" }) => {\n    // ЗАПРОС на блокировку пользователя ИЛИ разблокировку\n    // /user/{user}/delete  {user} - oid пользователя\n    // \"recovery\": false\n    // поля нет или false - деактивация пользователя\n    // true - активация пользователя\n\n    this.setState((prevState) => {\n      const data = [...prevState.data];\n      const user = data.find((user) => user.oid === oid);\n      user.active = !user.active;\n      /* if (user.active) {\n        user.active = false;\n      } else {\n        user.active = true;\n      } */\n      return { data };\n    });\n  };\n\n  blockUsers = (users) => {\n    console.log(\"blockUsers: \", users);\n\n    const count = users.length;\n    users.forEach((user) => {\n      this.blockUser(user);\n      const {\n        oid,\n        surname = \"\",\n        firstname = \"\",\n        patronymic = \"\",\n        active,\n      } = user;\n      if (count === 1) {\n        this.showMessage(\n          `Пользователь ${surname} ${firstname} ${patronymic} ${\n            active ? \"за\" : \"раз\"\n          }блокирован`\n        );\n\n        console.log(\n          `Пользователь ${surname} ${firstname} ${patronymic} ${\n            active ? \"за\" : \"раз\"\n          }блокирован`\n        );\n      }\n    });\n\n    if (count > 1) {\n      const userText = userNominative(count);\n      const messageText = `${\n        users.every((user) => user.active) ? \"За\" : \"Раз\"\n      }блокирован${count % 10 === 1 ? \"\" : \"о\"} ${count} ${userText}`;\n      this.showMessage(messageText);\n\n      console.log(messageText);\n    }\n  };\n\n  showUnblockUserConfirmModal = (data = {}, text = \"\") => {\n    const unblockUserConfirmModal = { show: true, data, text };\n    this.setState({ unblockUserConfirmModal });\n  };\n\n  closeUnblockUserConfirmModal = () => {\n    const unblockUserConfirmModal = { show: false, data: {}, text: \"\" };\n    this.setState({ unblockUserConfirmModal });\n  };\n\n  showPasswordRecoveryConfirmModal = (data = {}, text = \"\") => {\n    const passwordRecoveryConfirmModal = { show: true, data, text };\n    this.setState({ passwordRecoveryConfirmModal });\n  };\n\n  closePasswordRecoveryConfirmModal = () => {\n    const passwordRecoveryConfirmModal = { show: false, data: {}, text: \"\" };\n    this.setState({ passwordRecoveryConfirmModal });\n  };\n\n  passwordRecoveryUser = ({\n    oid,\n    surname = \"\",\n    firstname = \"\",\n    patronymic = \"\",\n  }) => {\n    // ЗАПРОС восстановления пароля\n    /* this.showMessage(\n      `На email пользователя ${surname} ${firstname} ${patronymic} отправлено письмо для восстановления пароля`\n    ); */\n  };\n\n  passwordRecoveryUsers = (users) => {\n    console.log(\"passwordRecoveryUsers: \", users);\n\n    users.forEach((user) => this.passwordRecoveryUser(user));\n    const count = users.length;\n    if (count > 1) {\n      const userText = userGenitive(count);\n      const messageText = `На email ${count} ${userText} отправлены письма для восстановления паролей`;\n\n      console.log(\n        `На email ${count} ${userText} отправлены письма для восстановления паролей`\n      );\n      this.showMessage(messageText);\n    } else {\n      const { surname = \"\", firstname = \"\", patronymic = \"\" } = users[0];\n      this.showMessage(\n        `На email пользователя ${surname} ${firstname} ${patronymic} отправлено письмо для восстановления пароля`\n      );\n\n      console.log(\n        `На email пользователя ${surname} ${firstname} ${patronymic} отправлено письмо для восстановления пароля`\n      );\n    }\n  };\n\n  showUserModal = (type = \"\", data = {}) => {\n    const userModal = { show: true, type, data };\n    this.setState({ userModal });\n  };\n\n  closeUserModal = () => {\n    const userModal = { show: false, type: \"\", data: {} };\n    this.setState({ userModal });\n  };\n\n  saveUser = (stateModal) => {\n    console.log(\"Сохранение изменений\", stateModal);\n    const {\n      type,\n      oid = null,\n      surname = \"\",\n      firstname = \"\",\n      patronymic = \"\",\n      birthday = \"\",\n      userName,\n      accounts,\n      email,\n      phone,\n    } = stateModal;\n\n    const data = [...this.state.data];\n    // вместо type можно проверять oid\n    if (type === \"add\") {\n      console.log(\"Создание пользователя\", stateModal);\n      //ЗАПРОС на создание с oid\n      const oid = Date.now();\n      data.push({\n        oid,\n        surname: surname.trim(),\n        firstname: firstname.trim(),\n        patronymic: patronymic.trim(),\n        birthday,\n        email,\n        /* userName: userName.trim(), */\n        phone,\n        accounts,\n        active: true,\n      });\n    }\n    if (type === \"edit\") {\n      console.log(\"Редактирование пользователя\", stateModal);\n      const { active, userName, state, lastAuth } = stateModal;\n      //ЗАПРОС на изменение\n      let userIndex = data.findIndex((user) => user.oid === oid);\n      data[userIndex] = {\n        oid,\n        surname: surname.trim(),\n        firstname: firstname.trim(),\n        patronymic: patronymic.trim(),\n        birthday,\n        email,\n        phone,\n        accounts,\n        active,\n\n        userName: userName.trim(),\n        lastAuth,\n      };\n    }\n    this.setState({ data });\n    this.showMessage(\n      `Пользователь ${surname} ${firstname} ${patronymic} ${\n        type === \"add\" ? \"добавлен\" : \"изменен\"\n      }`\n    );\n  };\n\n  render() {\n    const {\n      columns,\n      /* data, */\n      blockUserConfirmModal,\n      unblockUserConfirmModal,\n      passwordRecoveryConfirmModal,\n      userModal,\n      message,\n      activeTab,\n    } = this.state;\n    const date = new Date();\n\n    const data = this.filterUsers(activeTab);\n\n    return (\n      <div className=\"user-grid\">\n        <MuiThemeProvider theme={theme}>\n          <MaterialTable\n            title=\"\"\n            tableRef={this.materialTableRef}\n            columns={columns}\n            data={data}\n            /* icons={{ Search: AccessAlarm, ResetSearch: ThreeDRotation }} */\n            options={{\n              showTitle: false, //поиск и кнопки сверху\n              /* showTextRowsSelected: false, */\n              /* debounceInterval: 1, */\n              /*!! headerSelectionProps: {  }, */\n\n              /* filtering: true, */\n\n              /* exportButton: true, */\n\n              actionsColumnIndex: -1,\n\n              //export: false, у поля\n              /* toolbar: false, */\n\n              toolbarButtonAlignment: \"left\",\n              // columnsButton: true, //выбор колонок\n              selection: true,\n\n              /* search: false, */\n              /* searchAutoFocus: true, */\n              searchFieldAlignment: \"left\",\n              searchFieldStyle: {\n                /* width: \"130%\" */\n                /* marginLeft: \"15px\",\n                marginRight: \"10px\", */\n              },\n              /* search:\n                this.materialTableRef.current?.dataManager.selectedCount > 0\n                  ? \"false\"\n                  : \"true\", */\n              /* searchFieldStyle: { flex: \"1 1 10%\" }, */\n              /* searchFieldVariant: \"outlined\", */\n              /* selectionProps: (rowData) => ({\n                disabled: rowData.id === 534,\n                // color: \"#ccc\", \n              }), */\n\n              rowStyle: (rowData) => ({\n                color: !rowData.active ? \"#aaa\" : \"\",\n              }),\n\n              addRowPosition: \"first\",\n\n              draggable: false,\n              paging: false,\n              /* pageSize: 10,\n              pageSizeOptions: [5, 10, 15, 20, 30, 50],\n              paginationType: \"stepped\",\n              paginationPosition: \"bottom\", */\n            }}\n            onSearchChange={() => {\n              console.log(\"Поиск\");\n            }}\n            components={{\n              /* Pagination: (props) => {\n                const selected = this.materialTableRef.current?.dataManager\n                  .selectedCount;\n                propsPagination = { ...props };\n                console.log(\"props: \", props);\n                return <MTablePagination {...props} />;\n              }, */\n\n              /* Action: (props) => {\n                console.log(\"props: \", props);\n                if (props.action?.id === \"add\") {\n                  return (\n                    <Button color=\"primary\" variant=\"contained\">\n                      {props.tooltip}\n                    </Button>\n                  );\n                } else {\n                  return <MTableAction {...props} />;\n                }\n              }, */\n              Actions: (props) => {\n                const propsCopy = { ...props };\n\n                propsCopy.actions = propsCopy.actions.map((action) => {\n                  if (typeof action === \"function\") {\n                    // action.position = \"row\";\n                    return action;\n                  }\n\n                  if (action?.id === \"block\") {\n                    //console.log(\"propsCopy: \", propsCopy);\n                    const { surname, firstname, patronymic } = propsCopy.data;\n                    if (propsCopy.data.active) {\n                      action.icon = () => (\n                        <Icon color=\"primary\" component={LockOpen} />\n                      );\n                      action.tooltip = \"Заблокировать\";\n                      action.onClick = (event, rowData) => {\n                        const data = [rowData];\n                        this.showBlockUserConfirmModal(\n                          data,\n                          `пользователя ${surname} ${firstname} ${patronymic}`\n                        );\n                      };\n                    } else {\n                      action.icon = () => (\n                        <Icon color=\"primary\" component={LockOutlined} />\n                      );\n                      action.tooltip = \"Разблокировать\";\n                      action.onClick = (event, rowData) => {\n                        const data = [rowData];\n                        this.showUnblockUserConfirmModal(\n                          data,\n                          `пользователя ${surname} ${firstname} ${patronymic}`\n                        );\n                      };\n                    }\n                  } else if (action?.id === \"password_recovery\") {\n                    const { email, phone } = propsCopy.data;\n                    if (!email?.value && !phone?.value) {\n                      action.disabled = true;\n                      action.tooltip = \"Необходима почта или телефон\";\n                      action.icon = () => (\n                        <Icon color=\"disabled\" component={VpnKeyOutlined} />\n                      );\n                    } else {\n                      action.disabled = false;\n                      action.tooltip = \"Восстановить пароль\";\n                      action.icon = () => (\n                        <Icon color=\"primary\" component={VpnKeyOutlined} />\n                      );\n                    }\n                  }\n\n                  return {\n                    ...action,\n                    disabled:\n                      action.disabled || action.disabledFunc?.(propsCopy.data),\n                  };\n                });\n                return <MTableActions {...propsCopy} />;\n              },\n              Toolbar: (props) => {\n                const title =\n                  props.selectedRows && props.selectedRows.length > 0\n                    ? typeof props.localization.nRowsSelected === \"function\"\n                      ? props.localization.nRowsSelected(\n                          props.selectedRows.length\n                        )\n                      : props.localization.nRowsSelected.replace(\n                          \"{0}\",\n                          props.selectedRows.length\n                        )\n                    : props.showTitle\n                    ? props.title\n                    : null;\n\n                return (\n                  <>\n                    <CustomToolbar\n                      {...props}\n                      showModalHandler={this.showUserModal}\n                      materialTableRef={this.materialTableRef}\n                      activeTab={activeTab}\n                      setActiveTab={this.setActiveTab}\n                      searchUsers={this.searchUsers}\n                    />\n                  </>\n                );\n              },\n            }}\n            localization={{\n              error: \"Ошибка получения данных\",\n              header: {\n                actions: \"Действия\",\n              },\n              toolbar: {\n                searchTooltip: \"Поиск\",\n                searchPlaceholder: \"Email, телефон или лицевой счет\",\n                nRowsSelected: \"{0} выбрано\",\n                addRemoveColumns: \"Добавить или убрать колонки\",\n                showColumnsTitle: \"Показать колонки\",\n              },\n              body: {\n                emptyDataSourceMessage: \"Нет данных\",\n                addTooltip: \"Добавить\",\n                editTooltip: \"Редактировать\",\n                deleteTooltip: \"Удалить\",\n                editRow: {\n                  deleteText:\n                    \"Вы уверены, что хотите удалить этого пользователя?\",\n                  cancelTooltip: \"Отменить\",\n                  saveTooltip: \"Сохранить\",\n                },\n              },\n              pagination: {\n                labelRowsSelect: \"строк\",\n                labelDisplayedRows: \"{from}-{to} из {count}\",\n                firstTooltip: \"В начало\",\n                nextTooltip: \"Следующая\",\n                previousTooltip: \"Предыдущая\",\n                lastTooltip: \"В конец\",\n                addRemoveColumns: \"Добавить или убрать колонки\",\n                nRowsSelected: \"{0} выбрано\",\n                searchTooltip: \"Поиск\",\n                searchPlaceholder: \"Email, телефон или лицевой счет\",\n              },\n            }}\n            /* initialFormData={initialFormData} */\n            /* onRowClick={(event, rowData, togglePanel) => togglePanel()} */\n            /* detailPanel={[\n              {\n                tooltip: \"Show Name\",\n                render: (rowData) => {\n                  return (\n                    <div\n                      style={{\n                        fontSize: 100,\n                        textAlign: \"center\",\n                        color: \"white\",\n                        backgroundColor: \"#43A047\",\n                      }}\n                    >\n                      {rowData.name}\n                    </div>\n                  );\n                },\n              },\n              {\n                icon: \"accounts_circle\",\n                tooltip: \"Show Surname\",\n                render: (rowData) => {\n                  return (\n                    <div\n                      style={{\n                        fontSize: 100,\n                        textAlign: \"center\",\n                        color: \"white\",\n                        backgroundColor: \"#E53935\",\n                      }}\n                    >\n                      {rowData.email}\n                    </div>\n                  );\n                },\n              },\n            ]} */\n            actions={[\n              // действия массовые при выборе, но с параметром position: \"row\" можно сделать у каждой строки (toolbarOnSelect toolbar)  isFreeAction: true, // доступна всегда, не только при выборе\n              /* (rowData) =>  */ {\n                id: \"password_recovery\",\n                icon: () => <Icon color=\"primary\" component={VpnKeyOutlined} />,\n                tooltip: \"Восстановить пароль\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  console.log(\"rowData: \", rowData);\n                  const {\n                    surname = \"\",\n                    firstname = \"\",\n                    patronymic = \"\",\n                  } = rowData;\n                  console.log(\n                    \"Восстановление пароля для пользователя \",\n                    `${surname} ${firstname} ${patronymic}`\n                  );\n                  /* this.showMessage(\n                    \"На email отправлено письмо для восстановления пароля\"\n                  ); */\n                  const data = [rowData];\n                  this.showPasswordRecoveryConfirmModal(\n                    data,\n                    `пользователя ${surname} ${firstname} ${patronymic}`\n                  );\n                },\n              },\n              {\n                icon: () => (\n                  <Icon color=\"primary\" component={VisibilityOutlined} />\n                ),\n                tooltip: \"Вход от пользователя\",\n                position: \"row\",\n                onClick: (event, rowData) => this.loginUser(rowData),\n              },\n              {\n                id: \"block\",\n                icon: \"edit\",\n                position: \"row\",\n                onClick: (event, rowData) => {},\n              },\n              {\n                icon: () => <Icon color=\"primary\" component={EditOutlined} />,\n                tooltip: \"Редактировать\",\n                position: \"row\",\n                onClick: (event, rowData) =>\n                  this.showUserModal(\"edit\", rowData),\n              },\n              // действия сверху:\n              /* {\n                id: \"add\",\n                icon: () => <Icon color=\"primary\">add_box</Icon>,\n                tooltip: \"Добавить\",\n                isFreeAction: true,\n                onClick: (event, rowData) => {\n                  // добавление пользователя\n                  console.log(\"Добавление пользователя\");\n                  this.showModalHandler(\"add\");\n                },\n              }, */\n              // действия для выбранных:\n              (rowData) => ({\n                icon: () => <Icon color=\"primary\" component={VpnKey} />,\n                tooltip: \"Восстановить пароль\",\n                position: \"toolbarOnSelect\",\n                onClick: (event, rowData) => {\n                  const count = rowData.length;\n                  const {\n                    surname = \"\",\n                    firstname = \"\",\n                    patronymic = \"\",\n                  } = rowData[0];\n\n                  const text =\n                    count > 1\n                      ? `${count} ${userGenitive(count)}`\n                      : `${userGenitive(\n                          count\n                        )} ${surname} ${firstname} ${patronymic}`;\n\n                  this.showPasswordRecoveryConfirmModal(rowData, text);\n                },\n                hidden: rowData.some(\n                  ({ email, phone }) => !email?.value && !phone?.value\n                ),\n              }),\n              (rowData) => ({\n                icon: rowData.every((item) => item.active)\n                  ? () => <Icon color=\"primary\" component={LockOutlined} />\n                  : rowData.every((item) => !item.active)\n                  ? () => <Icon color=\"primary\" component={LockOpen} />\n                  : () => null,\n                tooltip: rowData.every((item) => item.active)\n                  ? \"Заблокировать\"\n                  : \"Разблокировать\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  const count = rowData.length;\n                  const {\n                    surname = \"\",\n                    firstname = \"\",\n                    patronymic = \"\",\n                  } = rowData[0];\n\n                  const text =\n                    count > 1\n                      ? `${count} ${userGenitive(count)}`\n                      : `${userGenitive(\n                          count\n                        )} ${surname} ${firstname} ${patronymic}`;\n\n                  rowData.every((user) => user.active)\n                    ? this.showBlockUserConfirmModal(rowData, text)\n                    : rowData.every((user) => !user.active) &&\n                      this.showUnblockUserConfirmModal(rowData, text);\n                },\n                hidden:\n                  rowData.some((item) => item.active) &&\n                  rowData.some((item) => !item.active),\n              }),\n\n              /* (rowData) => {\n                return rowData.active === 1\n                  && {\n                      icon: () => (\n                        <Icon color=\"primary\" component={LockOutlinedIcon} />\n                      ),\n                      disable: true,\n                      tooltip: \"Заблокировать\",\n                      position: \"row\",\n                      onClick: (event, rowData) => {\n                      },\n                    }\n                  ||rowData.active === 2 && {\n                      icon: () => (\n                        <Icon color=\"primary\" component={LockOpenIcon} />\n                      ),\n                      disable: false,\n                      tooltip: \"Разблокировать\",\n                      position: \"row\",\n                      onClick: (event, rowData) => {\n                      },\n                    };\n              }, */\n\n              /* (rowData) => ({\n                //для всех\n                icon: LockOpenIcon,\n                tooltip: \"Заблокировать\", // Разблокировать\n                position: \"row\",\n                onClick: (event, rowData) => alert(\"You saved \" + rowData.name),\n              }), */\n\n              /* {\n                icon: \"delete\", //() => <Icon color=\"primary\">delete</Icon>,\n                iconProps: { color: \"primary\" },\n                tooltip: \"Удалить все\",\n                position: \"toolbarOnSelect\",\n                // position: \"row\", \n                // disabled: (rowData) => rowData.id === 200, \n\n                onClick: (event, rowData) => {\n                  console.log(\"rowData: \", rowData);\n                  const conf = window.confirm(\n                    rowData.length > 1\n                      ? `Вы хотите удалить ${rowData.length} пользователя(ей)?`\n                      : `Вы хотите удалить ${rowData[0].name}?`\n                  );\n                  if (conf) {\n                    this.setState((prevState) => {\n                      const data = [...prevState.data];\n                      rowData.forEach((item) => {\n                        data.splice(data.indexOf(item), 1);\n                        // запрос удаления\n                      });\n                      return { ...prevState, data };\n                    });\n                  }\n                },\n              }, */\n            ]}\n            onSelectionChange={(rows) => {\n              console.log(\"Вы выбрали \" + rows.length + \" строк!\");\n            }}\n            icons={{\n              Add: () => <Icon color=\"primary\">add_box</Icon>,\n              /* Edit: () => <Icon color=\"primary\" component={EditOutlined} />, */\n              /* Delete: () => <Icon color=\"primary\">delete_outline</Icon>, */\n              ViewColumn: () => <Icon color=\"primary\">view_column</Icon>,\n              /* Search: () => <Icon color=\"primary\">search</Icon>, */\n            }}\n            editable={\n              {\n                /* isEditable: (rowData) => rowData.id !== \"534\", */\n                /* isEditHidden: (rowData) => rowData.id === \"264\", */\n                /* isDeletable: (rowData) => rowData.id !== \"264\", */\n                /* isDeleteHidden: (rowData) => rowData.id === \"534\", */\n                /* onBulkUpdate: (changes) => // изменения сразу всей таблицы\n                new Promise((resolve, reject) => {\n                  setTimeout(() => {\n                    /* setData([...data, newData]); \n\n                    resolve();\n                  }, 1000);\n                }), */\n                /* onBulkEditRowChanged: (rowData) =>\n                new Promise((resolve, reject) => {\n                  setTimeout(() => {\n                    /* setData([...data, newData]); \n\n                    resolve();\n                  }, 1000);\n                }), */\n                /* onRowAddCancelled: (rowData) =>\n                console.log(\"Row adding cancelled\"),\n              onRowUpdateCancelled: (rowData) =>\n                console.log(\"Row editing cancelled\"),\n              onRowDeleteCancelled: (rowData) =>\n                console.log(\"Row deleting cancelled\"), */\n                /* onBulkUpdateCancelled: (rowData) =>\n              console.log(\"onBulkUpdateCancelled\"), */\n                /* onRowAdd: (newData) => {\n                // кнопка добавления сверху и событие\n                console.log(\"onRowAdd: \");\n                new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                    this.setState((prevState) => {\n                      const data = [...prevState.data];\n                      // запрос добавления\n                      data.push(newData);\n                      return { ...prevState, data };\n                    });\n                  }, 600);\n                });\n              }, */\n                /* onRowUpdate: (newData, oldData) =>\n                new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                    if (oldData) {\n                      this.setState((prevState) => {\n                        const data = [...prevState.data];\n                        data[data.indexOf(oldData)] = newData;\n\n                        // запрос обновления\n                        return { ...prevState, data };\n                      });\n                    }\n                  }, 600);\n                }), */\n                /* onRowDelete: (oldData) =>\n                new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                    this.setState((prevState) => {\n                      const data = [...prevState.data];\n                      data.splice(data.indexOf(oldData), 1);\n                      // запрос удаления\n                      return { ...prevState, data };\n                    });\n                  }, 600);\n                }), */\n              }\n            }\n          />\n          <Toast\n            onClose={this.hideMessage}\n            show={message.show}\n            delay={15000}\n            autohide\n            style={{\n              position: \"fixed\",\n              zIndex: 10,\n              bottom: \"20px\",\n              right: \"15px\",\n            }}\n          >\n            <Toast.Header>\n              <strong className=\"mr-auto\">Уведомление</strong>\n              {/* <img\n                src=\"holder.js/20x20?text=%20\"\n                className=\"rounded mr-2\"\n                alt=\"\"\n              />\n              <strong className=\"mr-auto\">Bootstrap</strong>\n              <small>11 mins ago</small> */}\n            </Toast.Header>\n            <Toast.Body>\n              <div>{message.text}</div>\n\n              <div>\n                <Moment durationFromNow interval={1000} /* diff={date} */>\n                  {moment().add(15, \"seconds\")}\n                </Moment>\n              </div>\n              {/* <div>\n                <Moment durationFromNow interval={1000} /* diff={date} >\n                  {moment(date).add(15, \"seconds\")}\n                </Moment>\n              </div> */}\n            </Toast.Body>\n          </Toast>\n        </MuiThemeProvider>\n\n        <UsersModal\n          show={userModal.show}\n          type={userModal.type}\n          data={userModal.data}\n          closeModalHandler={this.closeUserModal}\n          saveUserHandler={this.saveUser}\n        />\n        <ConfirmModal\n          show={blockUserConfirmModal.show}\n          type=\"block_user\"\n          data={blockUserConfirmModal.data}\n          text={blockUserConfirmModal.text}\n          cancelHandler={this.closeBlockUserConfirmModal}\n          confirmHandler={this.blockUsers}\n        />\n        <ConfirmModal\n          show={unblockUserConfirmModal.show}\n          type=\"unblock_user\"\n          data={unblockUserConfirmModal.data}\n          text={unblockUserConfirmModal.text}\n          cancelHandler={this.closeUnblockUserConfirmModal}\n          confirmHandler={this.blockUsers}\n        />\n        <ConfirmModal\n          show={passwordRecoveryConfirmModal.show}\n          type=\"password_recovery\"\n          data={passwordRecoveryConfirmModal.data}\n          text={passwordRecoveryConfirmModal.text}\n          cancelHandler={this.closePasswordRecoveryConfirmModal}\n          confirmHandler={this.passwordRecoveryUsers}\n        />\n\n        {/* <MyEnhancedForm surname=\"Петров\" /> */}\n        {/* <MyForm surname=\"Петров\" /> */}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport UsersGrid from \"./UsersGrid\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<UsersGrid />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}